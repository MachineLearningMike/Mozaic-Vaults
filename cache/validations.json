{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "14b4f1709ee5acbedf66e31c376688af1bde2c323e21a07defdbfb3cb9916a31",
          "withoutMetadata": "f8afa570120e3fd7b7d5006b19c546b6dc57e652bed46668f57cfc9635a85e3e",
          "linkedWithoutMetadata": "f8afa570120e3fd7b7d5006b19c546b6dc57e652bed46668f57cfc9635a85e3e"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "64fc5ad5a4da450f8c0894edcdcf860192b7650edceae0dbdadcafa03c3f48d4",
          "withoutMetadata": "1c75c36ec00971703046a5f5e97ed8c85b7a097a80be143a5e10239c9fd59624",
          "linkedWithoutMetadata": "1c75c36ec00971703046a5f5e97ed8c85b7a097a80be143a5e10239c9fd59624"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "a1abf44299d460c5a6440ccbb3e2d7cf8bf4ae2c9ec5db6e4d1ca68d1848642a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "b27ad826f0de350ddb5d1358f7787521cef4556a24075e6a59e7fac0903a89d9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "605c95a04e4b45d78c85ac223bdbf27b1889442975a69660fe21a32c6d007a62",
          "withoutMetadata": "8e7283c786978698c58c26b52d3345a5f92fba707c5383c124e216331d04a807",
          "linkedWithoutMetadata": "8e7283c786978698c58c26b52d3345a5f92fba707c5383c124e216331d04a807"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "051e529ba1029045e6e1faa7608efa6dad60d8f18bfe3aa52949e15cc2b7ade7",
          "withoutMetadata": "7bce2aea0c90474c0d173327b6d945768166acc2900fe80e4bbdd99e6bca8dfc",
          "linkedWithoutMetadata": "7bce2aea0c90474c0d173327b6d945768166acc2900fe80e4bbdd99e6bca8dfc"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Capped": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:11",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "cap()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_cap",
            "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "2f9f0bf6be8c79895a33a4a90876e1ac748179d66179ea6f7a352b277e72761b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "a5a34447b5311eb496574c3a1171d3fc150ea49c3f03216668d1ea8bda4a0e6c",
          "withoutMetadata": "7dde7731f3be8febfaec45a937417b6c35d6bfafc0d146c071a299380297ad01",
          "linkedWithoutMetadata": "7dde7731f3be8febfaec45a937417b6c35d6bfafc0d146c071a299380297ad01"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "3a853a0b3820de09dc7c1310308c8484f4a868452df34b016c3c2d4e64cacfe7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "3eea58dbd1127e2406efd61234806d350893afb6ef62a1602bb30263b4da0607",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165Checker": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:15",
        "version": {
          "withMetadata": "423327fc8a0014de7370a5048931eac313bd0788cbbe6f00ec5c9b8d915ba46d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "50f5e58c306793554328b849f7766387bfded545af2a91055dcda082a6dc10db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StargateComposed": {
        "src": "contracts/StargateComposed.sol:13",
        "version": {
          "withMetadata": "13017f1484349255bb462608d961c3a9a9d945a6325382e834fd5e8072cc0504",
          "withoutMetadata": "89361a9f4a69c93a42fd0b63a31701f5020d65381de469af4c469ca52508784b",
          "linkedWithoutMetadata": "89361a9f4a69c93a42fd0b63a31701f5020d65381de469af4c469ca52508784b"
        },
        "inherit": [
          "IStargateReceiver"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "swapNativeForNative(uint16,address,uint16,uint16,uint256,address,uint256,uint256,uint256,uint256,address)",
          "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StargateComposed",
            "src": "contracts/StargateComposed.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "OUT_TO_NATIVE",
            "src": "contracts/StargateComposed.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stargateRouter",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "StargateComposed",
              "src": "contracts/StargateComposed.sol:15"
            },
            {
              "label": "ammRouter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "StargateComposed",
              "src": "contracts/StargateComposed.sol:16"
            },
            {
              "label": "OUT_TO_NATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "StargateComposed",
              "src": "contracts/StargateComposed.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExampleOFTUpgradeable": {
        "src": "contracts/contracts-upgradable/example/ExampleOFTUpgradeable.sol:8",
        "version": {
          "withMetadata": "235f0184fdbb84b9745d1d696e611a450440cee404160ef3c4e84cd70bb2a08e",
          "withoutMetadata": "4cfd6f65e32db2e9bb89b5b5717d53de2ccbe90ea93ca345ee524a6a1589b3d7",
          "linkedWithoutMetadata": "4cfd6f65e32db2e9bb89b5b5717d53de2ccbe90ea93ca345ee524a6a1589b3d7"
        },
        "inherit": [
          "Proxied",
          "OFTUpgradeable",
          "IOFTUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OFTCoreUpgradeable",
          "IOFTCoreUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "NonblockingLzAppUpgradeable",
          "LzAppUpgradeable",
          "ILayerZeroUserApplicationConfigUpgradeable",
          "ILayerZeroReceiverUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "lzEndpoint",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ILayerZeroEndpointUpgradeable)8607",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:14"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:15"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:16"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:107"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "255",
              "type": "t_bool",
              "contract": "OFTCoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/OFT/OFTCoreUpgradeable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OFTCoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/OFT/OFTCoreUpgradeable.sol:80"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "308",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "309",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "310",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "311",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OFTUpgradeable",
              "src": "contracts/contracts-upgradable/token/OFT/OFTUpgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ExampleOFTUpgradeable",
              "src": "contracts/contracts-upgradable/example/ExampleOFTUpgradeable.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpointUpgradeable)8607": {
              "label": "contract ILayerZeroEndpointUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExampleONFT721Upgradeable": {
        "src": "contracts/contracts-upgradable/example/ExampleONFT721Upgradeable.sol:8",
        "version": {
          "withMetadata": "c8d08b9b5cfcd67524ceb5a3487100dd2715a5105719a7e902f5533632f34844",
          "withoutMetadata": "e498a3e799318c925bcc29d13f915d23a053a67385a640313cc779a75f5f1a7a",
          "linkedWithoutMetadata": "e498a3e799318c925bcc29d13f915d23a053a67385a640313cc779a75f5f1a7a"
        },
        "inherit": [
          "Proxied",
          "ONFT721Upgradeable",
          "IONFT721Upgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ONFT721CoreUpgradeable",
          "IONFT721CoreUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "NonblockingLzAppUpgradeable",
          "LzAppUpgradeable",
          "ILayerZeroUserApplicationConfigUpgradeable",
          "ILayerZeroReceiverUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "lzEndpoint",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ILayerZeroEndpointUpgradeable)8607",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:14"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:15"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:16"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:107"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "255",
              "type": "t_bool",
              "contract": "ONFT721CoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721CoreUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ONFT721CoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721CoreUpgradeable.sol:81"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "306",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "307",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "310",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "311",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "312",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ONFT721Upgradeable",
              "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721Upgradeable.sol:45"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ExampleONFT721Upgradeable",
              "src": "contracts/contracts-upgradable/example/ExampleONFT721Upgradeable.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpointUpgradeable)8607": {
              "label": "contract ILayerZeroEndpointUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ILayerZeroEndpointUpgradeable": {
        "src": "contracts/contracts-upgradable/interfaces/ILayerZeroEndpointUpgradeable.sol:7",
        "inherit": [
          "ILayerZeroUserApplicationConfigUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "getChainId()",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getConfig(uint16,uint16,address,uint256)",
          "getSendVersion(address)",
          "getReceiveVersion(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ILayerZeroReceiverUpgradeable": {
        "src": "contracts/contracts-upgradable/interfaces/ILayerZeroReceiverUpgradeable.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lzReceive(uint16,bytes,uint64,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ILayerZeroUserApplicationConfigUpgradeable": {
        "src": "contracts/contracts-upgradable/interfaces/ILayerZeroUserApplicationConfigUpgradeable.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LzAppUpgradeable": {
        "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:13",
        "inherit": [
          "ILayerZeroUserApplicationConfigUpgradeable",
          "ILayerZeroReceiverUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "lzReceive(uint16,bytes,uint64,bytes)",
          "getGasLimit(bytes)",
          "getConfig(uint16,uint16,address,uint256)",
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)",
          "setTrustedRemote(uint16,bytes)",
          "setMinDstGasLookup(uint16,uint256,uint256)",
          "isTrustedRemote(uint16,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "lzEndpoint",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ILayerZeroEndpointUpgradeable)8607",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:14"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:15"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:16"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpointUpgradeable)8607": {
              "label": "contract ILayerZeroEndpointUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NonblockingLzAppUpgradeable": {
        "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:12",
        "inherit": [
          "LzAppUpgradeable",
          "ILayerZeroUserApplicationConfigUpgradeable",
          "ILayerZeroReceiverUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "nonblockingLzReceive(uint16,bytes,uint64,bytes)",
          "retryMessage(uint16,bytes,uint64,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "lzEndpoint",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ILayerZeroEndpointUpgradeable)8607",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:14"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:15"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:16"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:107"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpointUpgradeable)8607": {
              "label": "contract ILayerZeroEndpointUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOFTCoreUpgradeable": {
        "src": "contracts/contracts-upgradable/token/OFT/IOFTCoreUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "estimateSendFee(uint16,bytes,uint256,bool,bytes)",
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)",
          "circulatingSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IOFTUpgradeable": {
        "src": "contracts/contracts-upgradable/token/OFT/IOFTUpgradeable.sol:11",
        "inherit": [
          "IERC20Upgradeable",
          "IOFTCoreUpgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OFTCoreUpgradeable": {
        "src": "contracts/contracts-upgradable/token/OFT/OFTCoreUpgradeable.sol:9",
        "inherit": [
          "IOFTCoreUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "NonblockingLzAppUpgradeable",
          "LzAppUpgradeable",
          "ILayerZeroUserApplicationConfigUpgradeable",
          "ILayerZeroReceiverUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "estimateSendFee(uint16,bytes,uint256,bool,bytes)",
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)",
          "setUseCustomAdapterParams(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "lzEndpoint",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ILayerZeroEndpointUpgradeable)8607",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:14"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:15"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:16"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:107"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "255",
              "type": "t_bool",
              "contract": "OFTCoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/OFT/OFTCoreUpgradeable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OFTCoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/OFT/OFTCoreUpgradeable.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpointUpgradeable)8607": {
              "label": "contract ILayerZeroEndpointUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OFTUpgradeable": {
        "src": "contracts/contracts-upgradable/token/OFT/OFTUpgradeable.sol:12",
        "version": {
          "withMetadata": "2f1a79463d0879c327832d79fb3f347ed5c2d8abe9a8deff4a7de9889633ce5b",
          "withoutMetadata": "07602c9c57e44359f43e5f8453858b5f1ddf7183c79ce42982edf48c5295679d",
          "linkedWithoutMetadata": "07602c9c57e44359f43e5f8453858b5f1ddf7183c79ce42982edf48c5295679d"
        },
        "inherit": [
          "IOFTUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OFTCoreUpgradeable",
          "IOFTCoreUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "NonblockingLzAppUpgradeable",
          "LzAppUpgradeable",
          "ILayerZeroUserApplicationConfigUpgradeable",
          "ILayerZeroReceiverUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "circulatingSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "lzEndpoint",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ILayerZeroEndpointUpgradeable)8607",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:14"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:15"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:16"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:107"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "255",
              "type": "t_bool",
              "contract": "OFTCoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/OFT/OFTCoreUpgradeable.sol:12"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OFTCoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/OFT/OFTCoreUpgradeable.sol:80"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "308",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "309",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "310",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "311",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OFTUpgradeable",
              "src": "contracts/contracts-upgradable/token/OFT/OFTUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpointUpgradeable)8607": {
              "label": "contract ILayerZeroEndpointUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IONFT721CoreUpgradeable": {
        "src": "contracts/contracts-upgradable/token/ONFT721/IONFT721CoreUpgradeable.sol:10",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "estimateSendFee(uint16,bytes,uint256,bool,bytes)",
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IONFT721Upgradeable": {
        "src": "contracts/contracts-upgradable/token/ONFT721/IONFT721Upgradeable.sol:11",
        "inherit": [
          "IERC721Upgradeable",
          "IONFT721CoreUpgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ONFT721CoreUpgradeable": {
        "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721CoreUpgradeable.sol:10",
        "inherit": [
          "IONFT721CoreUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "NonblockingLzAppUpgradeable",
          "LzAppUpgradeable",
          "ILayerZeroUserApplicationConfigUpgradeable",
          "ILayerZeroReceiverUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "estimateSendFee(uint16,bytes,uint256,bool,bytes)",
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)",
          "setUseCustomAdapterParams(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "lzEndpoint",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ILayerZeroEndpointUpgradeable)8607",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:14"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:15"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:16"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:107"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "255",
              "type": "t_bool",
              "contract": "ONFT721CoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721CoreUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ONFT721CoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721CoreUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpointUpgradeable)8607": {
              "label": "contract ILayerZeroEndpointUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ONFT721Upgradeable": {
        "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721Upgradeable.sol:13",
        "version": {
          "withMetadata": "1746f58bdfc05c586493288fe731b88c3a6c9731c52da61ebcec938c49c57ef5",
          "withoutMetadata": "65df2b8227439b1a72e4a753928b9d985f5c68cf809af35f8bc530f1b788cc3d",
          "linkedWithoutMetadata": "65df2b8227439b1a72e4a753928b9d985f5c68cf809af35f8bc530f1b788cc3d"
        },
        "inherit": [
          "IONFT721Upgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ONFT721CoreUpgradeable",
          "IONFT721CoreUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "NonblockingLzAppUpgradeable",
          "LzAppUpgradeable",
          "ILayerZeroUserApplicationConfigUpgradeable",
          "ILayerZeroReceiverUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "lzEndpoint",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(ILayerZeroEndpointUpgradeable)8607",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:14"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:15"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:16"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/LzAppUpgradeable.sol:107"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NonblockingLzAppUpgradeable",
              "src": "contracts/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "205",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "255",
              "type": "t_bool",
              "contract": "ONFT721CoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721CoreUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ONFT721CoreUpgradeable",
              "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721CoreUpgradeable.sol:81"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "306",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "307",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "310",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "311",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "312",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ONFT721Upgradeable",
              "src": "contracts/contracts-upgradable/token/ONFT721/ONFT721Upgradeable.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpointUpgradeable)8607": {
              "label": "contract ILayerZeroEndpointUpgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExampleBasedOFT": {
        "src": "contracts/examples/ExampleBasedOFT20.sol:9",
        "version": {
          "withMetadata": "adf1c183daa0bac8cbeed93fda88fc36280c4dae4d3c34caee9245ab000daaf0",
          "withoutMetadata": "6fee0a7f58794f010f0b7f9ab6d39f6dc0cf54984f441443ae1f7bef82419a8e",
          "linkedWithoutMetadata": "6fee0a7f58794f010f0b7f9ab6d39f6dc0cf54984f441443ae1f7bef82419a8e"
        },
        "inherit": [
          "BasedOFT",
          "OFT",
          "IOFT",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExampleBasedOFT",
            "src": "contracts/examples/ExampleBasedOFT20.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExampleComposableOFT": {
        "src": "contracts/examples/ExampleComposableOFT.sol:9",
        "version": {
          "withMetadata": "41fea4cba1b55ef97a3b46fb57c17f7a3b053251af48c25613471f417505b66c",
          "withoutMetadata": "433d49a8f305b2e6d8ae5927339e06d533341d25b10640497a9055caa315c250",
          "linkedWithoutMetadata": "433d49a8f305b2e6d8ae5927339e06d533341d25b10640497a9055caa315c250"
        },
        "inherit": [
          "ComposableOFT",
          "IComposableOFT",
          "ERC20",
          "IERC20Metadata",
          "ComposableOFTCore",
          "IComposableOFTCore",
          "IOFT",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExampleComposableOFT",
            "src": "contracts/examples/ExampleComposableOFT.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "failedOFTReceivedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "ComposableOFTCore",
              "src": "contracts/token/oft/composable/ComposableOFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExampleOFT": {
        "src": "contracts/examples/ExampleOFT.sol:9",
        "version": {
          "withMetadata": "5d9d2bf42b99ba10f3d76894887071baf5e33ffa16f78b574295436909a58255",
          "withoutMetadata": "a6fa5012b2e74076efa3f7fbdedbabf441eba60efc17f7118301a65802fc9521",
          "linkedWithoutMetadata": "a6fa5012b2e74076efa3f7fbdedbabf441eba60efc17f7118301a65802fc9521"
        },
        "inherit": [
          "OFT",
          "IOFT",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExampleOFT",
            "src": "contracts/examples/ExampleOFT.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExampleOFTV2": {
        "src": "contracts/examples/ExampleOFTV2.sol:9",
        "version": {
          "withMetadata": "6a10a3a58489eba2e874fd4dca8626b2612d25e1599e52a834c2b141843eaa57",
          "withoutMetadata": "fbae18677f9cf11c9f47dfe4c9be0730e443d6ae0e638a1ada00955ae21cf83f",
          "linkedWithoutMetadata": "fbae18677f9cf11c9f47dfe4c9be0730e443d6ae0e638a1ada00955ae21cf83f"
        },
        "inherit": [
          "OFTV2",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "BaseOFTV2",
          "IOFTV2",
          "ICommonOFT",
          "ERC165",
          "IERC165",
          "OFTCoreV2",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExampleOFTV2",
            "src": "contracts/examples/ExampleOFTV2.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:22"
            },
            {
              "label": "creditedPackets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:23"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(bytes => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bool)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ExampleUniversalONFT721": {
        "src": "contracts/examples/ExampleUniversalONFT721.sol:52",
        "version": {
          "withMetadata": "a87482c2fb6c61465eb881132e09d99833f33b1a0c8edfc983f84abf2b0ef8a1",
          "withoutMetadata": "5481f9900bb2a1e3b9840e90ac6aa736e1c48294b7fc664752c55573b82229fc",
          "linkedWithoutMetadata": "5481f9900bb2a1e3b9840e90ac6aa736e1c48294b7fc664752c55573b82229fc"
        },
        "inherit": [
          "UniversalONFT721",
          "ONFT721",
          "IONFT721",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ONFT721Core",
          "IONFT721Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExampleUniversalONFT721",
            "src": "contracts/examples/ExampleUniversalONFT721.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "minGasToTransferAndStore",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:19"
            },
            {
              "label": "dstChainIdToBatchLimit",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:20"
            },
            {
              "label": "dstChainIdToTransferGas",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:21"
            },
            {
              "label": "storedCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:22"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "nextMintId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UniversalONFT721",
              "src": "contracts/token/onft/extension/UniversalONFT721.sol:9"
            },
            {
              "label": "maxMintId",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UniversalONFT721",
              "src": "contracts/token/onft/extension/UniversalONFT721.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)": {
              "label": "mapping(bytes32 => struct ONFT721Core.StoredCredit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(StoredCredit)21063_storage": {
              "label": "struct ONFT721Core.StoredCredit",
              "members": [
                {
                  "label": "srcChainId",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "toAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creditsRemain",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OmniCounter": {
        "src": "contracts/examples/OmniCounter.sol:9",
        "version": {
          "withMetadata": "d62e01c939962f251b2fc3640ce584b1886d613f3b48539f2082ab0463c481e1",
          "withoutMetadata": "94526f9cd8304494090abe8eaca7a66baa25eb590cfdeff79c96332574c219ae",
          "linkedWithoutMetadata": "94526f9cd8304494090abe8eaca7a66baa25eb590cfdeff79c96332574c219ae"
        },
        "inherit": [
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "estimateFee(uint16,bool,bytes)",
          "incrementCounter(uint16)",
          "setOracle(uint16,address)",
          "getOracle(uint16)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OmniCounter",
            "src": "contracts/examples/OmniCounter.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "counter",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OmniCounter",
              "src": "contracts/examples/OmniCounter.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PingPong": {
        "src": "contracts/examples/PingPong.sol:20",
        "version": {
          "withMetadata": "ece99bdfbe448dc6c405ec53b5bfb48c4a6b0adc69e7d2e8c1092e3743e0d1e7",
          "withoutMetadata": "cca2fdb96f570dff981b415cb12695dd193a87c8ff970092e5ab9ec16664e386",
          "linkedWithoutMetadata": "cca2fdb96f570dff981b415cb12695dd193a87c8ff970092e5ab9ec16664e386"
        },
        "inherit": [
          "Pausable",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "enable(bool)",
          "ping(uint16,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PingPong",
            "src": "contracts/examples/PingPong.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ILayerZeroEndpoint": {
        "src": "contracts/interfaces/ILayerZeroEndpoint.sol:7",
        "inherit": [
          "ILayerZeroUserApplicationConfig"
        ],
        "libraries": [],
        "methods": [
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "getChainId()",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getConfig(uint16,uint16,address,uint256)",
          "getSendVersion(address)",
          "getReceiveVersion(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ILayerZeroReceiver": {
        "src": "contracts/interfaces/ILayerZeroReceiver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lzReceive(uint16,bytes,uint64,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ILayerZeroUserApplicationConfig": {
        "src": "contracts/interfaces/ILayerZeroUserApplicationConfig.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateFactory": {
        "src": "contracts/interfaces/IStargateFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPool(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargatePool": {
        "src": "contracts/interfaces/IStargatePool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateReceiver": {
        "src": "contracts/interfaces/IStargateReceiver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateRouter": {
        "src": "contracts/interfaces/IStargateRouter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidity(uint256,uint256,address)",
          "swap(uint16,uint256,uint256,address payable,uint256,uint256,(uint256,uint256,bytes),bytes,bytes)",
          "redeemRemote(uint16,uint256,uint256,address payable,uint256,uint256,bytes,(uint256,uint256,bytes))",
          "instantRedeemLocal(uint16,uint256,address)",
          "redeemLocal(uint16,uint256,uint256,address payable,uint256,bytes,(uint256,uint256,bytes))",
          "sendCredits(uint16,uint256,uint256,address payable)",
          "quoteLayerZeroFee(uint16,uint8,bytes,bytes,(uint256,uint256,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateRouterETH": {
        "src": "contracts/interfaces/IStargateRouterETH.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidityETH()",
          "swapETH(uint16,address payable,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateWidget": {
        "src": "contracts/interfaces/IStargateWidget.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "partnerSwap(bytes2)",
          "swapTokens(uint16,uint16,uint16,uint256,uint256,(uint256,uint256,bytes),bytes,bytes2,(uint256,address))",
          "swapETH(uint16,uint256,uint256,bytes,bytes2,(uint256,address))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LzLib": {
        "src": "contracts/libraries/LzLib.sol:6",
        "version": {
          "withMetadata": "5482a5849f5b6cd3c0cbc1749b31e7881f92f63068a0b53dedc409766c83fcc8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LzApp": {
        "src": "contracts/lzApp/LzApp.sol:14",
        "inherit": [
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "BytesLib"
        ],
        "methods": [
          "lzReceive(uint16,bytes,uint64,bytes)",
          "getConfig(uint16,uint16,address,uint256)",
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)",
          "setTrustedRemote(uint16,bytes)",
          "setTrustedRemoteAddress(uint16,bytes)",
          "getTrustedRemoteAddress(uint16)",
          "setPrecrime(address)",
          "setMinDstGas(uint16,uint16,uint256)",
          "setPayloadSizeLimit(uint16,uint256)",
          "isTrustedRemote(uint16,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LzApp",
            "src": "contracts/lzApp/LzApp.sol:31"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lzEndpoint",
            "src": "contracts/lzApp/LzApp.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NonblockingLzApp": {
        "src": "contracts/lzApp/NonblockingLzApp.sol:13",
        "inherit": [
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "ExcessivelySafeCall"
        ],
        "methods": [
          "nonblockingLzReceive(uint16,bytes,uint64,bytes)",
          "retryMessage(uint16,bytes,uint64,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NonblockingLzApp",
            "src": "contracts/lzApp/NonblockingLzApp.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC1155Mock": {
        "src": "contracts/mocks/ERC1155Mock.sol:8",
        "version": {
          "withMetadata": "1b86a07d93713b506b28a331c64558f8b99e2aef35871691c17a7cff2489902b",
          "withoutMetadata": "088cb5d86d7f67e10c8efa3f4ac9ed3612899153dd086b7e243160453c641476",
          "linkedWithoutMetadata": "088cb5d86d7f67e10c8efa3f4ac9ed3612899153dd086b7e243160453c641476"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "mint(address,uint256,uint256)",
          "mintBatch(address,uint256[],uint256[])",
          "transfer(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mocks/ERC1155Mock.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Mock": {
        "src": "contracts/mocks/ERC20Mock.sol:7",
        "version": {
          "withMetadata": "70593781dc72e6ae8319c101740736c1f698bc5ba522b85d7a3653bb39e2030c",
          "withoutMetadata": "92a9fc6dac926587347f7cdc64c769162db9565958b3dd5512c1d853ca49ac0c",
          "linkedWithoutMetadata": "92a9fc6dac926587347f7cdc64c769162db9565958b3dd5512c1d853ca49ac0c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Mock",
            "src": "contracts/mocks/ERC20Mock.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721Mock": {
        "src": "contracts/mocks/ERC721Mock.sol:8",
        "version": {
          "withMetadata": "c2f12d369591d7d549bf89bf64329b30d828d50fbd529d4d88bafb015992495c",
          "withoutMetadata": "8554b826a95ba91b86ed4dd2ae417108577139acfef5087cdd0f92cde8862d82",
          "linkedWithoutMetadata": "8554b826a95ba91b86ed4dd2ae417108577139acfef5087cdd0f92cde8862d82"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "isApprovedOrOwner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Mock",
            "src": "contracts/mocks/ERC721Mock.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "baseTokenURI",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC721Mock",
              "src": "contracts/mocks/ERC721Mock.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "LZEndpointMock": {
        "src": "contracts/mocks/LZEndpointMock.sol:20",
        "version": {
          "withMetadata": "7a3acf8bbfc0be612b0015b3af705929964f0a98fe84969f45306be18018f7d9",
          "withoutMetadata": "82e066e15c51c037a8e89fd6c348664199b4e37bfb79b59f792cc75fc3d24be8",
          "linkedWithoutMetadata": "82e066e15c51c037a8e89fd6c348664199b4e37bfb79b59f792cc75fc3d24be8"
        },
        "inherit": [
          "ILayerZeroEndpoint",
          "ILayerZeroUserApplicationConfig"
        ],
        "libraries": [
          "LzLib"
        ],
        "methods": [
          "(uint16)",
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "getChainId()",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getConfig(uint16,uint16,address,uint256)",
          "getSendVersion(address)",
          "getReceiveVersion(address)",
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)",
          "getLengthOfQueue(uint16,bytes)",
          "blockNextMsg()",
          "setDestLzEndpoint(address,address)",
          "setRelayerPrice(uint128,uint128,uint128,uint64,uint64)",
          "setProtocolFee(uint256,uint256)",
          "setOracleFee(uint256)",
          "setDefaultAdapterParams(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LZEndpointMock",
            "src": "contracts/mocks/LZEndpointMock.sol:96"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_send_entered_state",
            "src": "contracts/mocks/LZEndpointMock.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_receive_entered_state",
            "src": "contracts/mocks/LZEndpointMock.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lzEndpointLookup",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:24"
            },
            {
              "label": "mockChainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint16",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:26"
            },
            {
              "label": "nextMsgBlocked",
              "offset": 2,
              "slot": "1",
              "type": "t_bool",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:27"
            },
            {
              "label": "relayerFeeConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(RelayerFeeConfig)12476_storage",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:30"
            },
            {
              "label": "protocolFeeConfig",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(ProtocolFeeConfig)12465_storage",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:31"
            },
            {
              "label": "oracleFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:32"
            },
            {
              "label": "defaultAdapterParams",
              "offset": 0,
              "slot": "7",
              "type": "t_bytes_storage",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:33"
            },
            {
              "label": "inboundNonce",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:37"
            },
            {
              "label": "outboundNonce",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint64))",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:40"
            },
            {
              "label": "storedPayload",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)12483_storage))",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:44"
            },
            {
              "label": "msgsToDeliver",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)12490_storage)dyn_storage))",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:46"
            },
            {
              "label": "_send_entered_state",
              "offset": 0,
              "slot": "12",
              "type": "t_uint8",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:49"
            },
            {
              "label": "_receive_entered_state",
              "offset": 1,
              "slot": "12",
              "type": "t_uint8",
              "contract": "LZEndpointMock",
              "src": "contracts/mocks/LZEndpointMock.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(QueuedPayload)12490_storage)dyn_storage": {
              "label": "struct LZEndpointMock.QueuedPayload[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)12490_storage)dyn_storage)": {
              "label": "mapping(bytes => struct LZEndpointMock.QueuedPayload[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)12483_storage)": {
              "label": "mapping(bytes => struct LZEndpointMock.StoredPayload)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_uint64)": {
              "label": "mapping(bytes => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_address,t_uint64))": {
              "label": "mapping(uint16 => mapping(address => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)12490_storage)dyn_storage))": {
              "label": "mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)12483_storage))": {
              "label": "mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))": {
              "label": "mapping(uint16 => mapping(bytes => uint64))",
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFeeConfig)12465_storage": {
              "label": "struct LZEndpointMock.ProtocolFeeConfig",
              "members": [
                {
                  "label": "zroFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeBP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(QueuedPayload)12490_storage": {
              "label": "struct LZEndpointMock.QueuedPayload",
              "members": [
                {
                  "label": "dstAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nonce",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "payload",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RelayerFeeConfig)12476_storage": {
              "label": "struct LZEndpointMock.RelayerFeeConfig",
              "members": [
                {
                  "label": "dstPriceRatio",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dstGasPriceInWei",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "dstNativeAmtCap",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "baseGas",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "gasPerByte",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(StoredPayload)12483_storage": {
              "label": "struct LZEndpointMock.StoredPayload",
              "members": [
                {
                  "label": "payloadLength",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dstAddress",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "payloadHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MockToken": {
        "src": "contracts/mocks/MockToken.sol:8",
        "version": {
          "withMetadata": "d77a602590f48adec2e374db7f71505cf6c8f2335725f261a0358f5696034c0d",
          "withoutMetadata": "39ba0132a77d255a66d2f972da9370e979cc0ef714938bdf7a29f8b260fe0928",
          "linkedWithoutMetadata": "39ba0132a77d255a66d2f972da9370e979cc0ef714938bdf7a29f8b260fe0928"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mocks/MockToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OFTStakingMock": {
        "src": "contracts/mocks/OFTStakingMock.sol:13",
        "version": {
          "withMetadata": "a445303a1ee8693b51d0a6c7a7782473fd335a22ce37131d78c203b9bbe72e9e",
          "withoutMetadata": "b5299f6c260d90889e69e97a57bc1f421c1ed781d3822129fcf3601c3fbadeaf",
          "linkedWithoutMetadata": "b5299f6c260d90889e69e97a57bc1f421c1ed781d3822129fcf3601c3fbadeaf"
        },
        "inherit": [
          "IOFTReceiver"
        ],
        "libraries": [
          "SafeERC20",
          "BytesLib"
        ],
        "methods": [
          "(address)",
          "setRemoteStakingContract(uint16,bytes)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "withdrawTo(uint256,address)",
          "depositToDstChain(uint16,bytes,uint256,bytes)",
          "quoteForDeposit(uint16,bytes,uint256,bytes)",
          "onOFTReceived(uint16,bytes,uint64,bytes,uint256,bytes)",
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OFTStakingMock",
            "src": "contracts/mocks/OFTStakingMock.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oft",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IComposableOFTCore)16450",
              "contract": "OFTStakingMock",
              "src": "contracts/mocks/OFTStakingMock.sol:24"
            },
            {
              "label": "remoteStakingContracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "OFTStakingMock",
              "src": "contracts/mocks/OFTStakingMock.sol:25"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OFTStakingMock",
              "src": "contracts/mocks/OFTStakingMock.sol:26"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "OFTStakingMock",
              "src": "contracts/mocks/OFTStakingMock.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IComposableOFTCore)16450": {
              "label": "contract IComposableOFTCore",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OFTStakingMockV2": {
        "src": "contracts/mocks/OFTStakingMockV2.sol:13",
        "version": {
          "withMetadata": "4d6326d8a9eac107f24d7577ca3eea146ef52f9f6ec750db6e9e4244a1529a22",
          "withoutMetadata": "3777fd59b362799da17decb2866bab1773eb75fdddd2ccc82d53c3423c9f9fc3",
          "linkedWithoutMetadata": "3777fd59b362799da17decb2866bab1773eb75fdddd2ccc82d53c3423c9f9fc3"
        },
        "inherit": [
          "IOFTReceiverV2"
        ],
        "libraries": [
          "SafeERC20",
          "BytesLib"
        ],
        "methods": [
          "(address)",
          "setRemoteStakingContract(uint16,bytes32)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "withdrawTo(uint256,address)",
          "depositToDstChain(uint16,bytes,uint256,bytes)",
          "quoteForDeposit(uint16,bytes,uint256,bytes)",
          "onOFTReceived(uint16,bytes,uint64,bytes32,uint256,bytes)",
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OFTStakingMockV2",
            "src": "contracts/mocks/OFTStakingMockV2.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oft",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IOFTV2)17574",
              "contract": "OFTStakingMockV2",
              "src": "contracts/mocks/OFTStakingMockV2.sol:24"
            },
            {
              "label": "remoteStakingContracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes32)",
              "contract": "OFTStakingMockV2",
              "src": "contracts/mocks/OFTStakingMockV2.sol:25"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OFTStakingMockV2",
              "src": "contracts/mocks/OFTStakingMockV2.sol:26"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "OFTStakingMockV2",
              "src": "contracts/mocks/OFTStakingMockV2.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IOFTV2)17574": {
              "label": "contract IOFTV2",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes32)": {
              "label": "mapping(uint16 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ONFT721Mock": {
        "src": "contracts/mocks/ONFT721Mock.sol:7",
        "version": {
          "withMetadata": "6d441162e208560d330ec83eba1f53ddc7114aac24a2264a600ec8205982e987",
          "withoutMetadata": "faab2487be9ccfc57628ee75d20868873d1a1437368d2b875c6edde3f14bdec8",
          "linkedWithoutMetadata": "faab2487be9ccfc57628ee75d20868873d1a1437368d2b875c6edde3f14bdec8"
        },
        "inherit": [
          "ONFT721",
          "IONFT721",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ONFT721Core",
          "IONFT721Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ONFT721Mock",
            "src": "contracts/mocks/ONFT721Mock.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "minGasToTransferAndStore",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:19"
            },
            {
              "label": "dstChainIdToBatchLimit",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:20"
            },
            {
              "label": "dstChainIdToTransferGas",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:21"
            },
            {
              "label": "storedCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:22"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)": {
              "label": "mapping(bytes32 => struct ONFT721Core.StoredCredit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(StoredCredit)21063_storage": {
              "label": "struct ONFT721Core.StoredCredit",
              "members": [
                {
                  "label": "srcChainId",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "toAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creditsRemain",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StargateSwap": {
        "src": "contracts/stargate/StargateSwap.sol:13",
        "version": {
          "withMetadata": "99f817b14c123e58e8dbfdce0a2760871602a3a7f2478d4550636a33e3f27b25",
          "withoutMetadata": "e3052718a7d4ed73c7248b1b8c7d759a7e0d016c615aadb32e5366b867677c71",
          "linkedWithoutMetadata": "e3052718a7d4ed73c7248b1b8c7d759a7e0d016c615aadb32e5366b867677c71"
        },
        "inherit": [
          "IStargateReceiver"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(address,address,bytes2)",
          "swap(uint256,address,uint16,uint16,uint16,address,address)",
          "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StargateSwap",
            "src": "contracts/stargate/StargateSwap.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stargateRouter",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "StargateSwap",
              "src": "contracts/stargate/StargateSwap.sol:16"
            },
            {
              "label": "widgetSwap",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "StargateSwap",
              "src": "contracts/stargate/StargateSwap.sol:17"
            },
            {
              "label": "partnerId",
              "offset": 20,
              "slot": "1",
              "type": "t_bytes2",
              "contract": "StargateSwap",
              "src": "contracts/stargate/StargateSwap.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes2": {
              "label": "bytes2",
              "numberOfBytes": "2"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOFT": {
        "src": "contracts/token/oft/IOFT.sol:11",
        "inherit": [
          "IERC20",
          "IOFTCore",
          "IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IOFTCore": {
        "src": "contracts/token/oft/IOFTCore.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "estimateSendFee(uint16,bytes,uint256,bool,bytes)",
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OFT": {
        "src": "contracts/token/oft/OFT.sol:11",
        "version": {
          "withMetadata": "26fd97f2f17c9250630c7c96757add7c6746f985b51108201da78e99fc72b8aa",
          "withoutMetadata": "46ac2e99549e2237d177257da8aa02d0e6587a721a863abbc3a72b178c35ee9c",
          "linkedWithoutMetadata": "46ac2e99549e2237d177257da8aa02d0e6587a721a863abbc3a72b178c35ee9c"
        },
        "inherit": [
          "IOFT",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "supportsInterface(bytes4)",
          "token()",
          "circulatingSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OFT",
            "src": "contracts/token/oft/OFT.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OFTCore": {
        "src": "contracts/token/oft/OFTCore.sol:9",
        "inherit": [
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "BytesLib"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "estimateSendFee(uint16,bytes,uint256,bool,bytes)",
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)",
          "setUseCustomAdapterParams(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OFTCore",
            "src": "contracts/token/oft/OFTCore.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ComposableBasedOFT": {
        "src": "contracts/token/oft/composable/ComposableBasedOFT.sol:7",
        "version": {
          "withMetadata": "92fe001bdbcc64d005d3e5809ccc3f78b63309c6f3bc0dd4f314f4dcb00c25a9",
          "withoutMetadata": "90ce175deccb90aeefb10a8846b2d6dc7c176c31331c1723ec0d3fcc50581b28",
          "linkedWithoutMetadata": "90ce175deccb90aeefb10a8846b2d6dc7c176c31331c1723ec0d3fcc50581b28"
        },
        "inherit": [
          "ComposableOFT",
          "IComposableOFT",
          "ERC20",
          "IERC20Metadata",
          "ComposableOFTCore",
          "IComposableOFTCore",
          "IOFT",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "circulatingSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ComposableBasedOFT",
            "src": "contracts/token/oft/composable/ComposableBasedOFT.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "failedOFTReceivedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "ComposableOFTCore",
              "src": "contracts/token/oft/composable/ComposableOFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ComposableOFT": {
        "src": "contracts/token/oft/composable/ComposableOFT.sol:9",
        "version": {
          "withMetadata": "6df20fceba008a3608427a93fc586a52fa5332901017e3939d919f74867c16b5",
          "withoutMetadata": "6215ed7b97493c2808b70cb7027d42653cf6d2c4faf6b2fcb6a2778db322be22",
          "linkedWithoutMetadata": "6215ed7b97493c2808b70cb7027d42653cf6d2c4faf6b2fcb6a2778db322be22"
        },
        "inherit": [
          "IComposableOFT",
          "ERC20",
          "IERC20Metadata",
          "ComposableOFTCore",
          "IComposableOFTCore",
          "IOFT",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "supportsInterface(bytes4)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ComposableOFT",
            "src": "contracts/token/oft/composable/ComposableOFT.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "failedOFTReceivedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "ComposableOFTCore",
              "src": "contracts/token/oft/composable/ComposableOFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ComposableOFTCore": {
        "src": "contracts/token/oft/composable/ComposableOFTCore.sol:10",
        "inherit": [
          "IComposableOFTCore",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "ExcessivelySafeCall",
          "BytesLib"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "estimateSendAndCallFee(uint16,bytes,uint256,bytes,uint64,bool,bytes)",
          "sendAndCall(address,uint16,bytes,uint256,bytes,uint64,address payable,address,bytes)",
          "retryOFTReceived(uint16,bytes,uint64,bytes,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ComposableOFTCore",
            "src": "contracts/token/oft/composable/ComposableOFTCore.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "failedOFTReceivedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "ComposableOFTCore",
              "src": "contracts/token/oft/composable/ComposableOFTCore.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ComposableProxyOFT": {
        "src": "contracts/token/oft/composable/ComposableProxyOFT.sol:8",
        "version": {
          "withMetadata": "042c9e4fbf41247ea61830a3524a2bb692f7134e259987690162c20d5d3b03c6",
          "withoutMetadata": "9960bb42264143108c379a43b9c46a5a5bee544c3477142d9a58babde9276bf1",
          "linkedWithoutMetadata": "9960bb42264143108c379a43b9c46a5a5bee544c3477142d9a58babde9276bf1"
        },
        "inherit": [
          "ComposableOFTCore",
          "IComposableOFTCore",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(address,address)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ComposableProxyOFT",
            "src": "contracts/token/oft/composable/ComposableProxyOFT.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "innerToken",
            "src": "contracts/token/oft/composable/ComposableProxyOFT.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "failedOFTReceivedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "ComposableOFTCore",
              "src": "contracts/token/oft/composable/ComposableOFTCore.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IComposableOFT": {
        "src": "contracts/token/oft/composable/IComposableOFT.sol:11",
        "inherit": [
          "IComposableOFTCore",
          "IOFT",
          "IERC20",
          "IOFTCore",
          "IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IComposableOFTCore": {
        "src": "contracts/token/oft/composable/IComposableOFTCore.sol:10",
        "inherit": [
          "IOFTCore",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "estimateSendAndCallFee(uint16,bytes,uint256,bytes,uint64,bool,bytes)",
          "sendAndCall(address,uint16,bytes,uint256,bytes,uint64,address payable,address,bytes)",
          "retryOFTReceived(uint16,bytes,uint64,bytes,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IOFTReceiver": {
        "src": "contracts/token/oft/composable/IOFTReceiver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onOFTReceived(uint16,bytes,uint64,bytes,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BasedOFT": {
        "src": "contracts/token/oft/extension/BasedOFT.sol:7",
        "version": {
          "withMetadata": "d9838b86c23c31d5cb83771c27fa9666bbd0f28b9a85878c33ed3934f96b53c7",
          "withoutMetadata": "3ea8bbd008d3b7e8983f9277d79016a04c416e3d0cdf83423fb7d99ed5176540",
          "linkedWithoutMetadata": "3ea8bbd008d3b7e8983f9277d79016a04c416e3d0cdf83423fb7d99ed5176540"
        },
        "inherit": [
          "OFT",
          "IOFT",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "circulatingSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasedOFT",
            "src": "contracts/token/oft/extension/BasedOFT.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GlobalCappedOFT": {
        "src": "contracts/token/oft/extension/GlobalCappedOFT.sol:11",
        "version": {
          "withMetadata": "ba0c1f1d94cc2119f34767c18d3728cd80f06f34e50f1078e26a0c430fc2caa2",
          "withoutMetadata": "8c4aed5de6cd6c1e0e821294c0208ec782718c46782bad4b36354db476c2b426",
          "linkedWithoutMetadata": "8c4aed5de6cd6c1e0e821294c0208ec782718c46782bad4b36354db476c2b426"
        },
        "inherit": [
          "ERC20Capped",
          "BasedOFT",
          "OFT",
          "IOFT",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GlobalCappedOFT",
            "src": "contracts/token/oft/extension/GlobalCappedOFT.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NativeOFT": {
        "src": "contracts/token/oft/extension/NativeOFT.sol:8",
        "version": {
          "withMetadata": "3fe84266506f77aa31b63c047a0fb594966c74930551a5df0ae4e2e2e42ecb07",
          "withoutMetadata": "3c423b7015d1a2b1746ed2b12488291654c3f2bf5e950a63542aa5d4358cde00",
          "linkedWithoutMetadata": "3c423b7015d1a2b1746ed2b12488291654c3f2bf5e950a63542aa5d4358cde00"
        },
        "inherit": [
          "ReentrancyGuard",
          "OFT",
          "IOFT",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)",
          "deposit()",
          "withdraw(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NativeOFT",
            "src": "contracts/token/oft/extension/NativeOFT.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PausableOFT": {
        "src": "contracts/token/oft/extension/PausableOFT.sol:9",
        "version": {
          "withMetadata": "9dfff7b87cb65428d4edeb4d8f31379648436002452e1e06737e11dd18d789fb",
          "withoutMetadata": "9718eaba9d37fb898a33e7930e9184f90421aba62460bee09a7970c1fbe7f9c4",
          "linkedWithoutMetadata": "9718eaba9d37fb898a33e7930e9184f90421aba62460bee09a7970c1fbe7f9c4"
        },
        "inherit": [
          "Pausable",
          "OFT",
          "IOFT",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address)",
          "pauseSendTokens(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PausableOFT",
            "src": "contracts/token/oft/extension/PausableOFT.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProxyOFT": {
        "src": "contracts/token/oft/extension/ProxyOFT.sol:8",
        "version": {
          "withMetadata": "c8aff7f7e91f97e1864e50e3599e094839eb6454490aaff22c93711ea1d49170",
          "withoutMetadata": "6fec0aedaacc2d2a15f464d3e1f657afae47c1ffd90120c01ba31b16a02cc1c9",
          "linkedWithoutMetadata": "6fec0aedaacc2d2a15f464d3e1f657afae47c1ffd90120c01ba31b16a02cc1c9"
        },
        "inherit": [
          "OFTCore",
          "IOFTCore",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(address,address)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyOFT",
            "src": "contracts/token/oft/extension/ProxyOFT.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "innerToken",
            "src": "contracts/token/oft/extension/ProxyOFT.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCore",
              "src": "contracts/token/oft/OFTCore.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseOFTV2": {
        "src": "contracts/token/oft/v2/BaseOFTV2.sol:9",
        "inherit": [
          "IOFTV2",
          "ICommonOFT",
          "ERC165",
          "IERC165",
          "OFTCoreV2",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "sendFrom(address,uint16,bytes32,uint256,(address payable,address,bytes))",
          "sendAndCall(address,uint16,bytes32,uint256,bytes,uint64,(address payable,address,bytes))",
          "supportsInterface(bytes4)",
          "estimateSendFee(uint16,bytes32,uint256,bool,bytes)",
          "estimateSendAndCallFee(uint16,bytes32,uint256,bytes,uint64,bool,bytes)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseOFTV2",
            "src": "contracts/token/oft/v2/BaseOFTV2.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:22"
            },
            {
              "label": "creditedPackets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(bytes => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bool)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICommonOFT": {
        "src": "contracts/token/oft/v2/ICommonOFT.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "estimateSendFee(uint16,bytes32,uint256,bool,bytes)",
          "estimateSendAndCallFee(uint16,bytes32,uint256,bytes,uint64,bool,bytes)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IOFTReceiverV2": {
        "src": "contracts/token/oft/v2/IOFTReceiverV2.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onOFTReceived(uint16,bytes,uint64,bytes32,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IOFTV2": {
        "src": "contracts/token/oft/v2/IOFTV2.sol:10",
        "inherit": [
          "ICommonOFT",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "sendFrom(address,uint16,bytes32,uint256,(address payable,address,bytes))",
          "sendAndCall(address,uint16,bytes32,uint256,bytes,uint64,(address payable,address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OFTCoreV2": {
        "src": "contracts/token/oft/v2/OFTCoreV2.sol:10",
        "inherit": [
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "BytesLib",
          "ExcessivelySafeCall"
        ],
        "methods": [
          "callOnOFTReceived(uint16,bytes,uint64,bytes32,address,uint256,bytes,uint256)",
          "setUseCustomAdapterParams(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OFTCoreV2",
            "src": "contracts/token/oft/v2/OFTCoreV2.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "sharedDecimals",
            "src": "contracts/token/oft/v2/OFTCoreV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:22"
            },
            {
              "label": "creditedPackets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(bytes => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bool)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OFTV2": {
        "src": "contracts/token/oft/v2/OFTV2.sol:8",
        "version": {
          "withMetadata": "7b7b481359e1cba2c2c494a602e44a1e4389d31d6a4461147b7c6b71d5fb210f",
          "withoutMetadata": "c5e5658ad324d6d563ee14c25686132f593fa1168fbc899e833ab6a4584f8baf",
          "linkedWithoutMetadata": "c5e5658ad324d6d563ee14c25686132f593fa1168fbc899e833ab6a4584f8baf"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "BaseOFTV2",
          "IOFTV2",
          "ICommonOFT",
          "ERC165",
          "IERC165",
          "OFTCoreV2",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,address)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OFTV2",
            "src": "contracts/token/oft/v2/OFTV2.sol:12"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ld2sdRate",
            "src": "contracts/token/oft/v2/OFTV2.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:22"
            },
            {
              "label": "creditedPackets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:23"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(bytes => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bool)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProxyOFTV2": {
        "src": "contracts/token/oft/v2/ProxyOFTV2.sol:8",
        "version": {
          "withMetadata": "f6bc7f6015b0cb2d54a590e4572eeeda9eeac579764e5fb14b3fbc5a60449c1a",
          "withoutMetadata": "a4ff6b671632e0205a2a31fe038b93a7b078207a0147610b77100da775b2afed",
          "linkedWithoutMetadata": "a4ff6b671632e0205a2a31fe038b93a7b078207a0147610b77100da775b2afed"
        },
        "inherit": [
          "BaseOFTV2",
          "IOFTV2",
          "ICommonOFT",
          "ERC165",
          "IERC165",
          "OFTCoreV2",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(address,uint8,address)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyOFTV2",
            "src": "contracts/token/oft/v2/ProxyOFTV2.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "innerToken",
            "src": "contracts/token/oft/v2/ProxyOFTV2.sol:11"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ld2sdRate",
            "src": "contracts/token/oft/v2/ProxyOFTV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:22"
            },
            {
              "label": "creditedPackets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:23"
            },
            {
              "label": "outboundAmount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ProxyOFTV2",
              "src": "contracts/token/oft/v2/ProxyOFTV2.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(bytes => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bool)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseOFTWithFee": {
        "src": "contracts/token/oft/v2/fee/BaseOFTWithFee.sol:10",
        "inherit": [
          "IOFTWithFee",
          "ICommonOFT",
          "ERC165",
          "IERC165",
          "Fee",
          "OFTCoreV2",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "sendFrom(address,uint16,bytes32,uint256,uint256,(address payable,address,bytes))",
          "sendAndCall(address,uint16,bytes32,uint256,uint256,bytes,uint64,(address payable,address,bytes))",
          "supportsInterface(bytes4)",
          "estimateSendFee(uint16,bytes32,uint256,bool,bytes)",
          "estimateSendAndCallFee(uint16,bytes32,uint256,bytes,uint64,bool,bytes)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseOFTWithFee",
            "src": "contracts/token/oft/v2/fee/BaseOFTWithFee.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:22"
            },
            {
              "label": "creditedPackets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:23"
            },
            {
              "label": "chainIdToFeeBps",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_struct(FeeConfig)19305_storage)",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:10"
            },
            {
              "label": "defaultFeeBp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint16",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:11"
            },
            {
              "label": "feeOwner",
              "offset": 2,
              "slot": "9",
              "type": "t_address",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(bytes => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bool)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(FeeConfig)19305_storage)": {
              "label": "mapping(uint16 => struct Fee.FeeConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeConfig)19305_storage": {
              "label": "struct Fee.FeeConfig",
              "members": [
                {
                  "label": "feeBP",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Fee": {
        "src": "contracts/token/oft/v2/fee/Fee.sol:7",
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "setDefaultFeeBp(uint16)",
          "setFeeBp(uint16,bool,uint16)",
          "setFeeOwner(address)",
          "quoteOFTFee(uint16,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Fee",
            "src": "contracts/token/oft/v2/fee/Fee.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "chainIdToFeeBps",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_struct(FeeConfig)19305_storage)",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:10"
            },
            {
              "label": "defaultFeeBp",
              "offset": 0,
              "slot": "2",
              "type": "t_uint16",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:11"
            },
            {
              "label": "feeOwner",
              "offset": 2,
              "slot": "2",
              "type": "t_address",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint16,t_struct(FeeConfig)19305_storage)": {
              "label": "mapping(uint16 => struct Fee.FeeConfig)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeConfig)19305_storage": {
              "label": "struct Fee.FeeConfig",
              "members": [
                {
                  "label": "feeBP",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IOFTWithFee": {
        "src": "contracts/token/oft/v2/fee/IOFTWithFee.sol:10",
        "inherit": [
          "ICommonOFT",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "sendFrom(address,uint16,bytes32,uint256,uint256,(address payable,address,bytes))",
          "sendAndCall(address,uint16,bytes32,uint256,uint256,bytes,uint64,(address payable,address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OFTWithFee": {
        "src": "contracts/token/oft/v2/fee/OFTWithFee.sol:8",
        "version": {
          "withMetadata": "c637d8dbbf3e94df795e957cfa985c9b74b136f89ac9b123d77f79985b78b8b3",
          "withoutMetadata": "92a2e061322924fff8d87c98bfae34fe17a974371aafa17956cd516e5338fc76",
          "linkedWithoutMetadata": "92a2e061322924fff8d87c98bfae34fe17a974371aafa17956cd516e5338fc76"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "BaseOFTWithFee",
          "IOFTWithFee",
          "ICommonOFT",
          "ERC165",
          "IERC165",
          "Fee",
          "OFTCoreV2",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,address)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OFTWithFee",
            "src": "contracts/token/oft/v2/fee/OFTWithFee.sol:12"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ld2sdRate",
            "src": "contracts/token/oft/v2/fee/OFTWithFee.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:22"
            },
            {
              "label": "creditedPackets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:23"
            },
            {
              "label": "chainIdToFeeBps",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_struct(FeeConfig)19305_storage)",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:10"
            },
            {
              "label": "defaultFeeBp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint16",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:11"
            },
            {
              "label": "feeOwner",
              "offset": 2,
              "slot": "9",
              "type": "t_address",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:12"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(bytes => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bool)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(FeeConfig)19305_storage)": {
              "label": "mapping(uint16 => struct Fee.FeeConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(FeeConfig)19305_storage": {
              "label": "struct Fee.FeeConfig",
              "members": [
                {
                  "label": "feeBP",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProxyOFTWithFee": {
        "src": "contracts/token/oft/v2/fee/ProxyOFTWithFee.sol:8",
        "version": {
          "withMetadata": "7fe406f8e006750bed56b5d478722e2d658dc2274dc2e293e24d01cd0c200665",
          "withoutMetadata": "eb2c153e987a52660cea4b7eea730d84f0b8164e4200e4d8e618fe27ca310e06",
          "linkedWithoutMetadata": "eb2c153e987a52660cea4b7eea730d84f0b8164e4200e4d8e618fe27ca310e06"
        },
        "inherit": [
          "BaseOFTWithFee",
          "IOFTWithFee",
          "ICommonOFT",
          "ERC165",
          "IERC165",
          "Fee",
          "OFTCoreV2",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(address,uint8,address)",
          "circulatingSupply()",
          "token()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyOFTWithFee",
            "src": "contracts/token/oft/v2/fee/ProxyOFTWithFee.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "innerToken",
            "src": "contracts/token/oft/v2/fee/ProxyOFTWithFee.sol:11"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ld2sdRate",
            "src": "contracts/token/oft/v2/fee/ProxyOFTWithFee.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:22"
            },
            {
              "label": "creditedPackets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))",
              "contract": "OFTCoreV2",
              "src": "contracts/token/oft/v2/OFTCoreV2.sol:23"
            },
            {
              "label": "chainIdToFeeBps",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_struct(FeeConfig)19305_storage)",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:10"
            },
            {
              "label": "defaultFeeBp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint16",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:11"
            },
            {
              "label": "feeOwner",
              "offset": 2,
              "slot": "9",
              "type": "t_address",
              "contract": "Fee",
              "src": "contracts/token/oft/v2/fee/Fee.sol:12"
            },
            {
              "label": "outboundAmount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ProxyOFTWithFee",
              "src": "contracts/token/oft/v2/fee/ProxyOFTWithFee.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool))": {
              "label": "mapping(bytes => mapping(uint64 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bool)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bool)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(FeeConfig)19305_storage)": {
              "label": "mapping(uint16 => struct Fee.FeeConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bool)": {
              "label": "mapping(uint64 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeConfig)19305_storage": {
              "label": "struct Fee.FeeConfig",
              "members": [
                {
                  "label": "feeBP",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IONFT1155": {
        "src": "contracts/token/onft/IONFT1155.sol:11",
        "inherit": [
          "IERC1155",
          "IONFT1155Core",
          "IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IONFT1155Core": {
        "src": "contracts/token/onft/IONFT1155Core.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "sendFrom(address,uint16,bytes,uint256,uint256,address payable,address,bytes)",
          "sendBatchFrom(address,uint16,bytes,uint256[],uint256[],address payable,address,bytes)",
          "estimateSendFee(uint16,bytes,uint256,uint256,bool,bytes)",
          "estimateSendBatchFee(uint16,bytes,uint256[],uint256[],bool,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IONFT721": {
        "src": "contracts/token/onft/IONFT721.sol:11",
        "inherit": [
          "IERC721",
          "IONFT721Core",
          "IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IONFT721Core": {
        "src": "contracts/token/onft/IONFT721Core.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)",
          "sendBatchFrom(address,uint16,bytes,uint256[],address payable,address,bytes)",
          "estimateSendFee(uint16,bytes,uint256,bool,bytes)",
          "estimateSendBatchFee(uint16,bytes,uint256[],bool,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ONFT1155": {
        "src": "contracts/token/onft/ONFT1155.sol:11",
        "version": {
          "withMetadata": "f239477bdacf9abaa50c96c11aca462b3e0f6e3891142c0fbcb1f3f2f7b86daf",
          "withoutMetadata": "c6404d05420f3cfb5e0db5ce9d45de2f7ea71e0c4ee73ca67247c3556a2c7875",
          "linkedWithoutMetadata": "c6404d05420f3cfb5e0db5ce9d45de2f7ea71e0c4ee73ca67247c3556a2c7875"
        },
        "inherit": [
          "IONFT1155",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ONFT1155Core",
          "IONFT1155Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ONFT1155",
            "src": "contracts/token/onft/ONFT1155.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "ONFT1155Core",
              "src": "contracts/token/onft/ONFT1155Core.sol:13"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "9",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ONFT1155Core": {
        "src": "contracts/token/onft/ONFT1155Core.sol:9",
        "inherit": [
          "IONFT1155Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "estimateSendFee(uint16,bytes,uint256,uint256,bool,bytes)",
          "estimateSendBatchFee(uint16,bytes,uint256[],uint256[],bool,bytes)",
          "sendFrom(address,uint16,bytes,uint256,uint256,address payable,address,bytes)",
          "sendBatchFrom(address,uint16,bytes,uint256[],uint256[],address payable,address,bytes)",
          "setUseCustomAdapterParams(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ONFT1155Core",
            "src": "contracts/token/onft/ONFT1155Core.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "ONFT1155Core",
              "src": "contracts/token/onft/ONFT1155Core.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ONFT721": {
        "src": "contracts/token/onft/ONFT721.sol:11",
        "version": {
          "withMetadata": "72584a405098ba35ed427881dd30ad6a243c6fdebb1d9f0bddae43237584bc2e",
          "withoutMetadata": "0e20e674d0bf913ae0bfa6c1d9dbf6e5fb155bd21ad822110505d703ab6197f5",
          "linkedWithoutMetadata": "0e20e674d0bf913ae0bfa6c1d9dbf6e5fb155bd21ad822110505d703ab6197f5"
        },
        "inherit": [
          "IONFT721",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ONFT721Core",
          "IONFT721Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ONFT721",
            "src": "contracts/token/onft/ONFT721.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "minGasToTransferAndStore",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:19"
            },
            {
              "label": "dstChainIdToBatchLimit",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:20"
            },
            {
              "label": "dstChainIdToTransferGas",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:21"
            },
            {
              "label": "storedCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:22"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)": {
              "label": "mapping(bytes32 => struct ONFT721Core.StoredCredit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(StoredCredit)21063_storage": {
              "label": "struct ONFT721Core.StoredCredit",
              "members": [
                {
                  "label": "srcChainId",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "toAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creditsRemain",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ONFT721Core": {
        "src": "contracts/token/onft/ONFT721Core.sol:9",
        "inherit": [
          "IONFT721Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "estimateSendFee(uint16,bytes,uint256,bool,bytes)",
          "estimateSendBatchFee(uint16,bytes,uint256[],bool,bytes)",
          "sendFrom(address,uint16,bytes,uint256,address payable,address,bytes)",
          "sendBatchFrom(address,uint16,bytes,uint256[],address payable,address,bytes)",
          "clearCredits(bytes)",
          "setMinGasToTransferAndStore(uint256)",
          "setDstChainIdToTransferGas(uint16,uint256)",
          "setDstChainIdToBatchLimit(uint16,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ONFT721Core",
            "src": "contracts/token/onft/ONFT721Core.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "minGasToTransferAndStore",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:19"
            },
            {
              "label": "dstChainIdToBatchLimit",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:20"
            },
            {
              "label": "dstChainIdToTransferGas",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:21"
            },
            {
              "label": "storedCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)": {
              "label": "mapping(bytes32 => struct ONFT721Core.StoredCredit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_struct(StoredCredit)21063_storage": {
              "label": "struct ONFT721Core.StoredCredit",
              "members": [
                {
                  "label": "srcChainId",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "toAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creditsRemain",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProxyONFT1155": {
        "src": "contracts/token/onft/extension/ProxyONFT1155.sol:10",
        "version": {
          "withMetadata": "9064f6973211fd9fb3cc68f28027b458075b5265646cc05f94263955947243ec",
          "withoutMetadata": "fe3858fd5a86ee63db5197e78010b620a0305fd02333d3364f2f29450215979d",
          "linkedWithoutMetadata": "fe3858fd5a86ee63db5197e78010b620a0305fd02333d3364f2f29450215979d"
        },
        "inherit": [
          "IERC1155Receiver",
          "ONFT1155Core",
          "IONFT1155Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "ERC165Checker"
        ],
        "methods": [
          "(address,address)",
          "supportsInterface(bytes4)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyONFT1155",
            "src": "contracts/token/onft/extension/ProxyONFT1155.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/token/onft/extension/ProxyONFT1155.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "useCustomAdapterParams",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "ONFT1155Core",
              "src": "contracts/token/onft/ONFT1155Core.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProxyONFT721": {
        "src": "contracts/token/onft/extension/ProxyONFT721.sol:10",
        "version": {
          "withMetadata": "cf9aa26faadca410a2414ea86b66eb1ac21d015e254f8dba7a8f55410b2f26f2",
          "withoutMetadata": "f2707f7c8ebd8abe9674aed9c3bf2c7dd8f813228c91869c49b1264963051fe6",
          "linkedWithoutMetadata": "f2707f7c8ebd8abe9674aed9c3bf2c7dd8f813228c91869c49b1264963051fe6"
        },
        "inherit": [
          "IERC721Receiver",
          "ONFT721Core",
          "IONFT721Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "ERC165Checker"
        ],
        "methods": [
          "(uint256,address,address)",
          "supportsInterface(bytes4)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyONFT721",
            "src": "contracts/token/onft/extension/ProxyONFT721.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/token/onft/extension/ProxyONFT721.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "minGasToTransferAndStore",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:19"
            },
            {
              "label": "dstChainIdToBatchLimit",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:20"
            },
            {
              "label": "dstChainIdToTransferGas",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:21"
            },
            {
              "label": "storedCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)": {
              "label": "mapping(bytes32 => struct ONFT721Core.StoredCredit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_struct(StoredCredit)21063_storage": {
              "label": "struct ONFT721Core.StoredCredit",
              "members": [
                {
                  "label": "srcChainId",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "toAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creditsRemain",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UniversalONFT721": {
        "src": "contracts/token/onft/extension/UniversalONFT721.sol:8",
        "version": {
          "withMetadata": "25e1864dda4b5d3a0937445cae6a837229f0b913f49942f3e8bd97ddbd8c13f6",
          "withoutMetadata": "328ccafb8787f82e0dc83723c75df548057e0d5fa4706e094d9151e5b1d4e534",
          "linkedWithoutMetadata": "328ccafb8787f82e0dc83723c75df548057e0d5fa4706e094d9151e5b1d4e534"
        },
        "inherit": [
          "ONFT721",
          "IONFT721",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ONFT721Core",
          "IONFT721Core",
          "ERC165",
          "IERC165",
          "NonblockingLzApp",
          "LzApp",
          "ILayerZeroUserApplicationConfig",
          "ILayerZeroReceiver",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256)",
          "mint()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniversalONFT721",
            "src": "contracts/token/onft/extension/UniversalONFT721.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "trustedRemoteLookup",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:21"
            },
            {
              "label": "minDstGasLookup",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:22"
            },
            {
              "label": "payloadSizeLimitLookup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:23"
            },
            {
              "label": "precrime",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "LzApp",
              "src": "contracts/lzApp/LzApp.sol:24"
            },
            {
              "label": "failedMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "contract": "NonblockingLzApp",
              "src": "contracts/lzApp/NonblockingLzApp.sol:18"
            },
            {
              "label": "minGasToTransferAndStore",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:19"
            },
            {
              "label": "dstChainIdToBatchLimit",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:20"
            },
            {
              "label": "dstChainIdToTransferGas",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint16,t_uint256)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:21"
            },
            {
              "label": "storedCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)",
              "contract": "ONFT721Core",
              "src": "contracts/token/onft/ONFT721Core.sol:22"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "nextMintId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "UniversalONFT721",
              "src": "contracts/token/onft/extension/UniversalONFT721.sol:9"
            },
            {
              "label": "maxMintId",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "UniversalONFT721",
              "src": "contracts/token/onft/extension/UniversalONFT721.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(StoredCredit)21063_storage)": {
              "label": "mapping(bytes32 => struct ONFT721Core.StoredCredit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(StoredCredit)21063_storage": {
              "label": "struct ONFT721Core.StoredCredit",
              "members": [
                {
                  "label": "srcChainId",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "toAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creditsRemain",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BytesLib": {
        "src": "contracts/util/BytesLib.sol:12",
        "version": {
          "withMetadata": "ac1cd548ad9aaf9f5992e430c3c79194191e9673d717ebca68328cb8024311cf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ExcessivelySafeCall": {
        "src": "contracts/util/ExcessivelySafeCall.sol:4",
        "version": {
          "withMetadata": "f2812ac1e1f12db81b38d4858a129d1ab34cbd1e89a99b8084f7ce059ad288ea",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proxied": {
        "src": "hardhat-deploy/solc_0.8/proxy/Proxied.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "334b613aabed011bc686530dd381aa99bb04f0fe38d581494b5ca0071e13fd18",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "0cad02f2b547512f5d140d9dff4172ecab38c0dc5cad2e9157508ece490a59da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateFactory": {
        "src": "contracts/interfaces/IStargateFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPool(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargatePool": {
        "src": "contracts/interfaces/IStargatePool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateRouter": {
        "src": "contracts/interfaces/IStargateRouter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidity(uint256,uint256,address)",
          "swap(uint16,uint256,uint256,address payable,uint256,uint256,(uint256,uint256,bytes),bytes,bytes)",
          "redeemRemote(uint16,uint256,uint256,address payable,uint256,uint256,bytes,(uint256,uint256,bytes))",
          "instantRedeemLocal(uint16,uint256,address)",
          "redeemLocal(uint16,uint256,uint256,address payable,uint256,bytes,(uint256,uint256,bytes))",
          "sendCredits(uint16,uint256,uint256,address payable)",
          "quoteLayerZeroFee(uint16,uint8,bytes,bytes,(uint256,uint256,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateRouterETH": {
        "src": "contracts/interfaces/IStargateRouterETH.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addLiquidityETH()",
          "swapETH(uint16,address payable,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStargateWidget": {
        "src": "contracts/interfaces/IStargateWidget.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "partnerSwap(bytes2)",
          "swapTokens(uint16,uint16,uint16,uint256,uint256,(uint256,uint256,bytes),bytes,bytes2,(uint256,address))",
          "swapETH(uint16,uint256,uint256,bytes,bytes2,(uint256,address))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WidgetSwap": {
        "src": "contracts/stargate/WidgetSwap.sol:13",
        "version": {
          "withMetadata": "f55a12217ff6ec2ec55960569d933bc796e4517f766f53f7fb2eb49b1925ce5c",
          "withoutMetadata": "94bbf14d1c7d07ddb8f340e83a8b40d4f5af136e1b9cc9bf4f3113c1321a5d5f",
          "linkedWithoutMetadata": "94bbf14d1c7d07ddb8f340e83a8b40d4f5af136e1b9cc9bf4f3113c1321a5d5f"
        },
        "inherit": [
          "IStargateWidget",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(address,address,address)",
          "partnerSwap(bytes2)",
          "swapTokens(uint16,uint16,uint16,uint256,uint256,(uint256,uint256,bytes),bytes,bytes2,(uint256,address))",
          "swapETH(uint16,uint256,uint256,bytes,bytes2,(uint256,address))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WidgetSwap",
            "src": "contracts/stargate/WidgetSwap.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stargateRouter",
            "src": "contracts/stargate/WidgetSwap.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stargateRouterETH",
            "src": "contracts/stargate/WidgetSwap.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stargateFactory",
            "src": "contracts/stargate/WidgetSwap.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "tokenApproved",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "WidgetSwap",
              "src": "contracts/stargate/WidgetSwap.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "MozaicLP": {
        "src": "contracts/mContracts/MozaicLP.sol:5",
        "version": {
          "withMetadata": "13055ea9a54fbbebbde83cf83d0a67393de9fbe65965316fd70e78de7da61082",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MaintVault": {
        "src": "contracts/mContracts/MainVault.sol:7",
        "version": {
          "withMetadata": "8bdf919b7f260d1dcf37fbc30aa1e3095ea1d4021c69fe12efa3caf9fe247829",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [
          "Vault"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Vault": {
        "src": "contracts/mContracts/Vault.sol:5",
        "version": {
          "withMetadata": "bcc2a7cea693e3be6b2a48353390c91a9c12e696c43a72872af4cbc9ddd85a13",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}