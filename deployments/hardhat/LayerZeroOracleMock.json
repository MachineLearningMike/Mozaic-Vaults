{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockConfirmations",
          "type": "uint256"
        }
      ],
      "name": "OracleNotified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "chainPriceLookup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_destinationChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_relayerAddress",
          "type": "address"
        }
      ],
      "name": "isApproved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "_outboundBlockConfirmations",
          "type": "uint64"
        }
      ],
      "name": "notifyOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracleAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approve",
          "type": "bool"
        }
      ],
      "name": "setApprovedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_deliveryAddress",
          "type": "address"
        }
      ],
      "name": "setDeliveryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chain",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_destinationChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ulnAddress",
          "type": "address"
        }
      ],
      "name": "setUln",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uln",
      "outputs": [
        {
          "internalType": "contract ILayerZeroUltraLightNodeV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "_blockHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_confirmations",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "updateHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8b9a4ee28dd003a7d8d41ebba7d8b9ca349ddce42a72ba5bcb9f2259f5e6bdd3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "695343",
    "logsBloom": "0x
    "blockHash": "0x69eb4f4da2f61bf7cfebfa8877132c21202318101d4751b85547e9b444a1d06c",
    "transactionHash": "0x8b9a4ee28dd003a7d8d41ebba7d8b9ca349ddce42a72ba5bcb9f2259f5e6bdd3",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x8b9a4ee28dd003a7d8d41ebba7d8b9ca349ddce42a72ba5bcb9f2259f5e6bdd3",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x69eb4f4da2f61bf7cfebfa8877132c21202318101d4751b85547e9b444a1d06c"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "695343",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1522caf50543de0a74d894e1c0eec382",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockConfirmations\",\"type\":\"uint256\"}],\"name\":\"OracleNotified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainPriceLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_destinationChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_relayerAddress\",\"type\":\"address\"}],\"name\":\"isApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"_outboundBlockConfirmations\",\"type\":\"uint64\"}],\"name\":\"notifyOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"setApprovedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_deliveryAddress\",\"type\":\"address\"}],\"name\":\"setDeliveryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setJob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_destinationChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ulnAddress\",\"type\":\"address\"}],\"name\":\"setUln\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uln\",\"outputs\":[{\"internalType\":\"contract ILayerZeroUltraLightNodeV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"_blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_confirmations\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"updateHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/LayerZeroOracleMock.sol\":\"LayerZeroOracleMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/ILayerZeroOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\npragma solidity >=0.7.0;\\r\\n\\r\\ninterface ILayerZeroOracle {\\r\\n    // @notice query the oracle price for relaying block information to the destination chain\\r\\n    // @param _dstChainId the destination endpoint identifier\\r\\n    // @param _outboundProofType the proof type identifier to specify the data to be relayed\\r\\n    function getPrice(uint16 _dstChainId, uint16 _outboundProofType) external view returns (uint price);\\r\\n\\r\\n    // @notice Ultra-Light Node notifies the Oracle of a new block information relaying request\\r\\n    // @param _dstChainId the destination endpoint identifier\\r\\n    // @param _outboundProofType the proof type identifier to specify the data to be relayed\\r\\n    // @param _outboundBlockConfirmations the number of source chain block confirmation needed\\r\\n    function notifyOracle(uint16 _dstChainId, uint16 _outboundProofType, uint64 _outboundBlockConfirmations) external;\\r\\n\\r\\n    // @notice query if the address is an approved actor for privileges like data submission and fee withdrawal etc.\\r\\n    // @param _address the address to be checked\\r\\n    function isApproved(address _address) external view returns (bool approved);\\r\\n}\\r\\n\",\"keccak256\":\"0x8ac6f09ffd0fd0a840f3351e4a8e31445c65984a11c6c356daf396df5b05b593\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroUltraLightNodeV1.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\npragma solidity >=0.7.0;\\r\\n\\r\\ninterface ILayerZeroUltraLightNodeV1 {\\r\\n    // a Relayer can execute the validateTransactionProof()\\r\\n    function validateTransactionProof(uint16 _srcChainId, address _dstAddress, uint _gasLimit, bytes32 _lookupHash, bytes calldata _transactionProof) external;\\r\\n\\r\\n    // an Oracle delivers the block data using updateHash()\\r\\n    function updateHash(uint16 _remoteChainId, bytes32 _lookupHash, uint _confirmations, bytes32 _data) external;\\r\\n\\r\\n    // can only withdraw the receivable of the msg.sender\\r\\n    function withdrawNative(uint8 _type, address _owner, address payable _to, uint _amount) external;\\r\\n\\r\\n    function withdrawZRO(address _to, uint _amount) external;\\r\\n\\r\\n    // view functions\\r\\n    function oracleQuotedAmount(address _oracle) external view returns (uint);\\r\\n\\r\\n    function relayerQuotedAmount(address _relayer) external view returns (uint);\\r\\n}\\r\\n\",\"keccak256\":\"0xe336cc4a3e7b3ef020879292dcf6f5c6f391fbad083ae24e23c916e9225dd7d1\",\"license\":\"BUSL-1.1\"},\"contracts/mocks/LayerZeroOracleMock.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../interfaces/ILayerZeroOracle.sol\\\";\\r\\nimport \\\"../interfaces/ILayerZeroUltraLightNodeV1.sol\\\";\\r\\n\\r\\ncontract LayerZeroOracleMock is ILayerZeroOracle, Ownable, ReentrancyGuard {\\r\\n    mapping(address => bool) public approvedAddresses;\\r\\n    mapping(uint16 => mapping(uint16 => uint)) public chainPriceLookup;\\r\\n    uint public fee;\\r\\n    ILayerZeroUltraLightNodeV1 public uln; // ultraLightNode instance\\r\\n\\r\\n    event OracleNotified(uint16 dstChainId, uint16 _outboundProofType, uint blockConfirmations);\\r\\n    event Withdraw(address to, uint amount);\\r\\n\\r\\n    constructor() {\\r\\n        approvedAddresses[msg.sender] = true;\\r\\n    }\\r\\n\\r\\n    function notifyOracle(uint16 _dstChainId, uint16 _outboundProofType, uint64 _outboundBlockConfirmations) external override {\\r\\n        emit OracleNotified(_dstChainId, _outboundProofType, _outboundBlockConfirmations);\\r\\n    }\\r\\n\\r\\n    function updateHash(uint16 _remoteChainId, bytes32 _blockHash, uint _confirmations, bytes32 _data) external {\\r\\n        require(approvedAddresses[msg.sender], \\\"LayerZeroOracleMock: caller must be approved\\\");\\r\\n        uln.updateHash(_remoteChainId, _blockHash, _confirmations, _data);\\r\\n    }\\r\\n\\r\\n    function withdraw(address payable _to, uint _amount) public onlyOwner nonReentrant {\\r\\n        (bool success, ) = _to.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to withdraw\\\");\\r\\n        emit Withdraw(_to, _amount);\\r\\n    }\\r\\n\\r\\n    // owner can set uln\\r\\n    function setUln(address ulnAddress) external onlyOwner {\\r\\n        uln = ILayerZeroUltraLightNodeV1(ulnAddress);\\r\\n    }\\r\\n\\r\\n    // mock, doesnt do anything\\r\\n    function setJob(uint16 _chain, address _oracle, bytes32 _id, uint _fee) public onlyOwner {}\\r\\n\\r\\n    function setDeliveryAddress(uint16 _dstChainId, address _deliveryAddress) public onlyOwner {}\\r\\n\\r\\n    function setPrice(uint16 _destinationChainId, uint16 _outboundProofType, uint _price) external onlyOwner {\\r\\n        chainPriceLookup[_outboundProofType][_destinationChainId] = _price;\\r\\n    }\\r\\n\\r\\n    function setApprovedAddress(address _oracleAddress, bool _approve) external {\\r\\n        approvedAddresses[_oracleAddress] = _approve;\\r\\n    }\\r\\n\\r\\n    function isApproved(address _relayerAddress) public view override returns (bool) {\\r\\n        return approvedAddresses[_relayerAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice(uint16 _destinationChainId, uint16 _outboundProofType) external view override returns (uint) {\\r\\n        return chainPriceLookup[_outboundProofType][_destinationChainId];\\r\\n    }\\r\\n\\r\\n    fallback() external payable {}\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x6737375e8ec52d3fc06e8075fc2de8264df0ebea329817f4a03275e8e9b446ea\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361003e565b6001808055336000908152600260205260409020805460ff1916909117905561008e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a5a8061009d6000396000f3fe6080604052600436106100f65760003560e01c8063715018a61161008f578063cd84b89d11610061578063cd84b89d14610326578063ddca3f4314610346578063f136a8741461035c578063f2fde38b1461038c578063f3fef3a3146103ac57005b8063715018a61461029b5780638da5cb5b146102b0578063bccc96d5146102ce578063c758b017146102ee57005b806366530579116100c857806366530579146101da578063673448dd146101fa5780636c473aff14610243578063704316e51461027b57005b806305941644146100ff5780630b4d51071461011f5780632ca4a5b014610174578063575765e21461019457005b366100fd57005b005b34801561010b57600080fd5b506100fd61011a36600461082a565b6103cc565b34801561012b57600080fd5b5061016161013a36600461086e565b61ffff80821660009081526003602090815260408083209386168352929052205492915050565b6040519081526020015b60405180910390f35b34801561018057600080fd5b506100fd61018f3660046108a1565b6103da565b3480156101a057600080fd5b506100fd6101af3660046108d8565b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b3480156101e657600080fd5b506100fd6101f536600461090b565b6103e6565b34801561020657600080fd5b5061023361021536600461095f565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200161016b565b34801561024f57600080fd5b50600554610263906001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b34801561028757600080fd5b506100fd610296366004610983565b610439565b3480156102a757600080fd5b506100fd61052e565b3480156102bc57600080fd5b506000546001600160a01b0316610263565b3480156102da57600080fd5b506100fd6102e93660046109bc565b610542565b3480156102fa57600080fd5b5061016161030936600461086e565b600360209081526000928352604080842090915290825290205481565b34801561033257600080fd5b506100fd61034136600461095f565b610570565b34801561035257600080fd5b5061016160045481565b34801561036857600080fd5b5061023361037736600461095f565b60026020526000908152604090205460ff1681565b34801561039857600080fd5b506100fd6103a736600461095f565b61059a565b3480156103b857600080fd5b506100fd6103c73660046109f8565b610613565b6103d4610754565b50505050565b6103e2610754565b5050565b6040805161ffff85811682528416602082015267ffffffffffffffff83168183015290517ff5f7eeb9c1ffb10aced9d0a5354641e9bccdde560963d05f8d26ad4a460c89a29181900360600190a1505050565b3360009081526002602052604090205460ff166104b25760405162461bcd60e51b815260206004820152602c60248201527f4c617965725a65726f4f7261636c654d6f636b3a2063616c6c6572206d75737460448201526b08189948185c1c1c9bdd995960a21b60648201526084015b60405180910390fd5b60055460405163704316e560e01b815261ffff861660048201526024810185905260448101849052606481018390526001600160a01b039091169063704316e590608401600060405180830381600087803b15801561051057600080fd5b505af1158015610524573d6000803e3d6000fd5b5050505050505050565b610536610754565b61054060006107ae565b565b61054a610754565b61ffff918216600090815260036020908152604080832095909416825293909352912055565b610578610754565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6105a2610754565b6001600160a01b0381166106075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a9565b610610816107ae565b50565b61061b610754565b6002600154141561066e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104a9565b60026001556040516000906001600160a01b0384169083908381818185875af1925050503d80600081146106be576040519150601f19603f3d011682016040523d82523d6000602084013e6106c3565b606091505b50509050806107095760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b60448201526064016104a9565b604080516001600160a01b0385168152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150506001805550565b6000546001600160a01b031633146105405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803561ffff8116811461081057600080fd5b919050565b6001600160a01b038116811461061057600080fd5b6000806000806080858703121561084057600080fd5b610849856107fe565b9350602085013561085981610815565b93969395505050506040820135916060013590565b6000806040838503121561088157600080fd5b61088a836107fe565b9150610898602084016107fe565b90509250929050565b600080604083850312156108b457600080fd5b6108bd836107fe565b915060208301356108cd81610815565b809150509250929050565b600080604083850312156108eb57600080fd5b82356108f681610815565b9150602083013580151581146108cd57600080fd5b60008060006060848603121561092057600080fd5b610929846107fe565b9250610937602085016107fe565b9150604084013567ffffffffffffffff8116811461095457600080fd5b809150509250925092565b60006020828403121561097157600080fd5b813561097c81610815565b9392505050565b6000806000806080858703121561099957600080fd5b6109a2856107fe565b966020860135965060408601359560600135945092505050565b6000806000606084860312156109d157600080fd5b6109da846107fe565b92506109e8602085016107fe565b9150604084013590509250925092565b60008060408385031215610a0b57600080fd5b8235610a1681610815565b94602093909301359350505056fea264697066735822122042b34dbcc024500cb5d4f6b1fe994ceb0399d02fca455af71e3c4ed52dd41c7364736f6c634300080c0033",
  "deployedBytecode": "0x6080604052600436106100f65760003560e01c8063715018a61161008f578063cd84b89d11610061578063cd84b89d14610326578063ddca3f4314610346578063f136a8741461035c578063f2fde38b1461038c578063f3fef3a3146103ac57005b8063715018a61461029b5780638da5cb5b146102b0578063bccc96d5146102ce578063c758b017146102ee57005b806366530579116100c857806366530579146101da578063673448dd146101fa5780636c473aff14610243578063704316e51461027b57005b806305941644146100ff5780630b4d51071461011f5780632ca4a5b014610174578063575765e21461019457005b366100fd57005b005b34801561010b57600080fd5b506100fd61011a36600461082a565b6103cc565b34801561012b57600080fd5b5061016161013a36600461086e565b61ffff80821660009081526003602090815260408083209386168352929052205492915050565b6040519081526020015b60405180910390f35b34801561018057600080fd5b506100fd61018f3660046108a1565b6103da565b3480156101a057600080fd5b506100fd6101af3660046108d8565b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b3480156101e657600080fd5b506100fd6101f536600461090b565b6103e6565b34801561020657600080fd5b5061023361021536600461095f565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200161016b565b34801561024f57600080fd5b50600554610263906001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b34801561028757600080fd5b506100fd610296366004610983565b610439565b3480156102a757600080fd5b506100fd61052e565b3480156102bc57600080fd5b506000546001600160a01b0316610263565b3480156102da57600080fd5b506100fd6102e93660046109bc565b610542565b3480156102fa57600080fd5b5061016161030936600461086e565b600360209081526000928352604080842090915290825290205481565b34801561033257600080fd5b506100fd61034136600461095f565b610570565b34801561035257600080fd5b5061016160045481565b34801561036857600080fd5b5061023361037736600461095f565b60026020526000908152604090205460ff1681565b34801561039857600080fd5b506100fd6103a736600461095f565b61059a565b3480156103b857600080fd5b506100fd6103c73660046109f8565b610613565b6103d4610754565b50505050565b6103e2610754565b5050565b6040805161ffff85811682528416602082015267ffffffffffffffff83168183015290517ff5f7eeb9c1ffb10aced9d0a5354641e9bccdde560963d05f8d26ad4a460c89a29181900360600190a1505050565b3360009081526002602052604090205460ff166104b25760405162461bcd60e51b815260206004820152602c60248201527f4c617965725a65726f4f7261636c654d6f636b3a2063616c6c6572206d75737460448201526b08189948185c1c1c9bdd995960a21b60648201526084015b60405180910390fd5b60055460405163704316e560e01b815261ffff861660048201526024810185905260448101849052606481018390526001600160a01b039091169063704316e590608401600060405180830381600087803b15801561051057600080fd5b505af1158015610524573d6000803e3d6000fd5b5050505050505050565b610536610754565b61054060006107ae565b565b61054a610754565b61ffff918216600090815260036020908152604080832095909416825293909352912055565b610578610754565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6105a2610754565b6001600160a01b0381166106075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a9565b610610816107ae565b50565b61061b610754565b6002600154141561066e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104a9565b60026001556040516000906001600160a01b0384169083908381818185875af1925050503d80600081146106be576040519150601f19603f3d011682016040523d82523d6000602084013e6106c3565b606091505b50509050806107095760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b60448201526064016104a9565b604080516001600160a01b0385168152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150506001805550565b6000546001600160a01b031633146105405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803561ffff8116811461081057600080fd5b919050565b6001600160a01b038116811461061057600080fd5b6000806000806080858703121561084057600080fd5b610849856107fe565b9350602085013561085981610815565b93969395505050506040820135916060013590565b6000806040838503121561088157600080fd5b61088a836107fe565b9150610898602084016107fe565b90509250929050565b600080604083850312156108b457600080fd5b6108bd836107fe565b915060208301356108cd81610815565b809150509250929050565b600080604083850312156108eb57600080fd5b82356108f681610815565b9150602083013580151581146108cd57600080fd5b60008060006060848603121561092057600080fd5b610929846107fe565b9250610937602085016107fe565b9150604084013567ffffffffffffffff8116811461095457600080fd5b809150509250925092565b60006020828403121561097157600080fd5b813561097c81610815565b9392505050565b6000806000806080858703121561099957600080fd5b6109a2856107fe565b966020860135965060408601359560600135945092505050565b6000806000606084860312156109d157600080fd5b6109da846107fe565b92506109e8602085016107fe565b9150604084013590509250925092565b60008060408385031215610a0b57600080fd5b8235610a1681610815565b94602093909301359350505056fea264697066735822122042b34dbcc024500cb5d4f6b1fe994ceb0399d02fca455af71e3c4ed52dd41c7364736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2624,
        "contract": "contracts/mocks/LayerZeroOracleMock.sol:LayerZeroOracleMock",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2848,
        "contract": "contracts/mocks/LayerZeroOracleMock.sol:LayerZeroOracleMock",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 19053,
        "contract": "contracts/mocks/LayerZeroOracleMock.sol:LayerZeroOracleMock",
        "label": "approvedAddresses",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 19059,
        "contract": "contracts/mocks/LayerZeroOracleMock.sol:LayerZeroOracleMock",
        "label": "chainPriceLookup",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"
      },
      {
        "astId": 19061,
        "contract": "contracts/mocks/LayerZeroOracleMock.sol:LayerZeroOracleMock",
        "label": "fee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 19064,
        "contract": "contracts/mocks/LayerZeroOracleMock.sol:LayerZeroOracleMock",
        "label": "uln",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(ILayerZeroUltraLightNodeV1)11337"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ILayerZeroUltraLightNodeV1)11337": {
        "encoding": "inplace",
        "label": "contract ILayerZeroUltraLightNodeV1",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint16 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_uint256)"
      },
      "t_mapping(t_uint16,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}