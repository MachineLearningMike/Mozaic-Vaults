{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_endpoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nonceContract",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_localChainId",
          "type": "uint16"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lib",
          "type": "address"
        }
      ],
      "name": "AddInboundProofLibraryForChain",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userApplication",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "configType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "newConfig",
          "type": "bytes"
        }
      ],
      "name": "AppConfigUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "proofType",
          "type": "uint16"
        }
      ],
      "name": "EnableSupportedOutboundProof",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lookupHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "blockData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "confirmations",
          "type": "uint256"
        }
      ],
      "name": "HashReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        }
      ],
      "name": "InvalidDst",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "Packet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srcAddress",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        }
      ],
      "name": "PacketReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "adapterParams",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "outboundProofType",
          "type": "uint16"
        }
      ],
      "name": "RelayerParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "SetChainAddressSize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "proofType",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "adapterParams",
          "type": "bytes"
        }
      ],
      "name": "SetDefaultAdapterParamsForChainId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "inboundProofLib",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "inboundBlockConfirm",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "outboundProofType",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "outboundBlockConfirm",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "SetDefaultConfigForChainId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "SetLayerZeroToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uln",
          "type": "bytes32"
        }
      ],
      "name": "SetRemoteUln",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "treasuryAddress",
          "type": "address"
        }
      ],
      "name": "SetTreasury",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawNative",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawZRO",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONFIG_TYPE_INBOUND_BLOCK_CONFIRMATIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONFIG_TYPE_INBOUND_PROOF_LIBRARY_VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONFIG_TYPE_ORACLE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONFIG_TYPE_OUTBOUND_BLOCK_CONFIRMATIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONFIG_TYPE_OUTBOUND_PROOF_TYPE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONFIG_TYPE_RELAYER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "accruedNativeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_library",
          "type": "address"
        }
      ],
      "name": "addInboundProofLibraryForChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "appConfig",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "inboundProofLibraryVersion",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "inboundBlockConfirmations",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "outboundBlockConfirmations",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "chainAddressSizeMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "defaultAdapterParams",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "defaultAppConfig",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "inboundProofLibraryVersion",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "inboundBlockConfirmations",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "outboundBlockConfirmations",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_proofType",
          "type": "uint16"
        }
      ],
      "name": "enableSupportedOutboundProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_ua",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_payInZRO",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "estimateFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nativeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "zroFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_ua",
          "type": "address"
        }
      ],
      "name": "getAppConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "inboundProofLibraryVersion",
              "type": "uint16"
            },
            {
              "internalType": "uint64",
              "name": "inboundBlockConfirmations",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "outboundProofType",
              "type": "uint16"
            },
            {
              "internalType": "uint64",
              "name": "outboundBlockConfirmations",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct ILayerZeroUltraLightNodeV2.ApplicationConfiguration",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_ua",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_path",
          "type": "bytes"
        }
      ],
      "name": "getOutboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "hashLookup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "inboundProofLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "layerZeroToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "maxInboundProofLibrary",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nativeFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonceContract",
      "outputs": [
        {
          "internalType": "contract NonceContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_dstAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "_gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "receivePayload_withNoValidation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ua",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_path",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        },
        {
          "internalType": "address payable",
          "name": "_refundAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zroPaymentAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        }
      ],
      "name": "setChainAddressSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_ua",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_proofType",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "setDefaultAdapterParamsForChainId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_inboundProofLibraryVersion",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "_inboundBlockConfirmations",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "_outboundBlockConfirmations",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setDefaultConfigForChainId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_layerZeroToken",
          "type": "address"
        }
      ],
      "name": "setLayerZeroToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "_remoteUln",
          "type": "bytes32"
        }
      ],
      "name": "setRemoteUln",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "supportedOutboundProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryContract",
      "outputs": [
        {
          "internalType": "contract ILayerZeroTreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryZROFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "ulnLookup",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "_lookupHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_confirmations",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_blockData",
          "type": "bytes32"
        }
      ],
      "name": "updateHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_dstAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_lookupHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_blockData",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_transactionProof",
          "type": "bytes"
        }
      ],
      "name": "validateTransactionProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawNative",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawZRO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8628afe40dde1f7289685008f8e1bb529eb43fdcaece0f1cfaa48f905fd28bc2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "3476409",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000080000000000000000000000000000000001000000000000000000000000000000000001000000000000000000000000000000000000020000000000000100000800000000000000000000000000000000400000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000002000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x9abc10da3a1255827a1cab337e386cce19f90fe6fca862ffd5c579b0a3b43ecc",
    "transactionHash": "0x8628afe40dde1f7289685008f8e1bb529eb43fdcaece0f1cfaa48f905fd28bc2",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 25,
        "transactionHash": "0x8628afe40dde1f7289685008f8e1bb529eb43fdcaece0f1cfaa48f905fd28bc2",
        "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x9abc10da3a1255827a1cab337e386cce19f90fe6fca862ffd5c579b0a3b43ecc"
      }
    ],
    "blockNumber": 25,
    "cumulativeGasUsed": "3476409",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    1337
  ],
  "numDeployments": 1,
  "solcInputHash": "d284bff40c69b40c79fc3eca88aacdd2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nonceContract\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_localChainId\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"name\":\"AddInboundProofLibraryForChain\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userApplication\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"configType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newConfig\",\"type\":\"bytes\"}],\"name\":\"AppConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"proofType\",\"type\":\"uint16\"}],\"name\":\"EnableSupportedOutboundProof\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lookupHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blockData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"}],\"name\":\"HashReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"InvalidDst\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"Packet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"adapterParams\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"outboundProofType\",\"type\":\"uint16\"}],\"name\":\"RelayerParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"SetChainAddressSize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"proofType\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"adapterParams\",\"type\":\"bytes\"}],\"name\":\"SetDefaultAdapterParamsForChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"inboundProofLib\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"inboundBlockConfirm\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"outboundProofType\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"outboundBlockConfirm\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"SetDefaultConfigForChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"SetLayerZeroToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uln\",\"type\":\"bytes32\"}],\"name\":\"SetRemoteUln\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"SetTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawNative\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawZRO\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONFIG_TYPE_INBOUND_BLOCK_CONFIRMATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONFIG_TYPE_INBOUND_PROOF_LIBRARY_VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONFIG_TYPE_ORACLE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONFIG_TYPE_OUTBOUND_BLOCK_CONFIRMATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONFIG_TYPE_OUTBOUND_PROOF_TYPE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONFIG_TYPE_RELAYER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"accruedNativeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_library\",\"type\":\"address\"}],\"name\":\"addInboundProofLibraryForChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"appConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"inboundProofLibraryVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"inboundBlockConfirmations\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"outboundBlockConfirmations\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainAddressSizeMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"defaultAdapterParams\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"defaultAppConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"inboundProofLibraryVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"inboundBlockConfirmations\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"outboundBlockConfirmations\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_proofType\",\"type\":\"uint16\"}],\"name\":\"enableSupportedOutboundProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_ua\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_ua\",\"type\":\"address\"}],\"name\":\"getAppConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"inboundProofLibraryVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"inboundBlockConfirmations\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"outboundBlockConfirmations\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct ILayerZeroUltraLightNodeV2.ApplicationConfiguration\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_ua\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"inboundProofLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layerZeroToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"maxInboundProofLibrary\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nativeFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonceContract\",\"outputs\":[{\"internalType\":\"contract NonceContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload_withNoValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ua\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setChainAddressSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_ua\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_proofType\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"setDefaultAdapterParamsForChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_inboundProofLibraryVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"_inboundBlockConfirmations\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"_outboundBlockConfirmations\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setDefaultConfigForChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroToken\",\"type\":\"address\"}],\"name\":\"setLayerZeroToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"_remoteUln\",\"type\":\"bytes32\"}],\"name\":\"setRemoteUln\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"supportedOutboundProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryContract\",\"outputs\":[{\"internalType\":\"contract ILayerZeroTreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryZROFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"ulnLookup\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"_lookupHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_confirmations\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_blockData\",\"type\":\"bytes32\"}],\"name\":\"updateHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_lookupHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_blockData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_transactionProof\",\"type\":\"bytes\"}],\"name\":\"validateTransactionProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawZRO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol\":\"UltraLightNodeV2_wo_Validation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\\r\\n\",\"keccak256\":\"0xb0f5dd5442f7f6dc3cba510c3170e5304de918b082ac658a2935433e80fefb66\",\"license\":\"MIT\"},\"contracts/interfaces/ILayerZeroMessagingLibrary.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\npragma solidity >=0.7.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroMessagingLibrary {\\r\\n    // send(), messages will be inflight.\\r\\n    function send(address _userApplication, uint64 _lastNonce, uint16 _chainId, bytes calldata _destination, bytes calldata _payload, address payable refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\r\\n\\r\\n    // estimate native fee at the send side\\r\\n    function estimateFees(uint16 _chainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    //---------------------------------------------------------------------------\\r\\n    // setConfig / getConfig are User Application (UA) functions to specify Oracle, Relayer, blockConfirmations, libraryVersion\\r\\n    function setConfig(uint16 _chainId, address _userApplication, uint _configType, bytes calldata _config) external;\\r\\n\\r\\n    function getConfig(uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\r\\n}\\r\\n\",\"keccak256\":\"0xaf0b227c9e26ebc95d06eff9c7ef401ac515ae162e593945fb6a490c2a473fcd\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroMessagingLibraryV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\npragma solidity >=0.7.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\nimport \\\"./ILayerZeroMessagingLibrary.sol\\\";\\r\\n\\r\\ninterface ILayerZeroMessagingLibraryV2 is ILayerZeroMessagingLibrary {\\r\\n    function getOutboundNonce(uint16 _chainId, bytes calldata _path) external view returns (uint64);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d29398378cfd441c58cba042afdb3471c598a0176884a769609f9a35121e047\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xe377e661a587f855100ae6bbc9159e9aa279a99b632b445b3b9fb45a347da63a\",\"license\":\"MIT\"},\"contracts/interfaces/ILayerZeroRelayerV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\npragma solidity >=0.7.0;\\r\\n\\r\\ninterface ILayerZeroRelayerV2 {\\r\\n    // @notice query price and assign jobs at the same time\\r\\n    // @param _dstChainId - the destination endpoint identifier\\r\\n    // @param _outboundProofType - the proof type identifier to specify proof to be relayed\\r\\n    // @param _userApplication - the source sending contract address. relayers may apply price discrimination to user apps\\r\\n    // @param _payloadSize - the length of the payload. it is an indicator of gas usage for relaying cross-chain messages\\r\\n    // @param _adapterParams - optional parameters for extra service plugins, e.g. sending dust tokens at the destination chain\\r\\n    function assignJob(uint16 _dstChainId, uint16 _outboundProofType, address _userApplication, uint _payloadSize, bytes calldata _adapterParams) external returns (uint price);\\r\\n\\r\\n    // @notice query the relayer price for relaying the payload and its proof to the destination chain\\r\\n    // @param _dstChainId - the destination endpoint identifier\\r\\n    // @param _outboundProofType - the proof type identifier to specify proof to be relayed\\r\\n    // @param _userApplication - the source sending contract address. relayers may apply price discrimination to user apps\\r\\n    // @param _payloadSize - the length of the payload. it is an indicator of gas usage for relaying cross-chain messages\\r\\n    // @param _adapterParams - optional parameters for extra service plugins, e.g. sending dust tokens at the destination chain\\r\\n    function getFee(uint16 _dstChainId, uint16 _outboundProofType, address _userApplication, uint _payloadSize, bytes calldata _adapterParams) external view returns (uint price);\\r\\n\\r\\n    // @notice withdraw the accrued fee in ultra light node\\r\\n    // @param _to - the fee receiver\\r\\n    // @param _amount - the withdrawal amount\\r\\n    function withdrawFee(address payable _to, uint _amount) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x0c6c2216f166b5f5f98c0714747e356446f70c891d15cb0e077b95fe48c37c45\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroTreasury {\\r\\n    function getFees(bool payInZro, uint relayerFee, uint oracleFee) external view returns (uint);\\r\\n}\\r\\n\",\"keccak256\":\"0x900fa5cf0eade8555ccab31732128779a0498e06dc26737952a88bc6f532586a\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroUltraLightNodeV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\npragma solidity >=0.7.0;\\r\\npragma abicoder v2;\\r\\n\\r\\ninterface ILayerZeroUltraLightNodeV2 {\\r\\n    // Relayer functions\\r\\n    function validateTransactionProof(uint16 _srcChainId, address _dstAddress, uint _gasLimit, bytes32 _lookupHash, bytes32 _blockData, bytes calldata _transactionProof) external;\\r\\n\\r\\n    // an Oracle delivers the block data using updateHash()\\r\\n    function updateHash(uint16 _srcChainId, bytes32 _lookupHash, uint _confirmations, bytes32 _blockData) external;\\r\\n\\r\\n    // can only withdraw the receivable of the msg.sender\\r\\n    function withdrawNative(address payable _to, uint _amount) external;\\r\\n\\r\\n    function withdrawZRO(address _to, uint _amount) external;\\r\\n\\r\\n    // view functions\\r\\n    function getAppConfig(uint16 _remoteChainId, address _userApplicationAddress) external view returns (ApplicationConfiguration memory);\\r\\n\\r\\n    function accruedNativeFee(address _address) external view returns (uint);\\r\\n\\r\\n    struct ApplicationConfiguration {\\r\\n        uint16 inboundProofLibraryVersion;\\r\\n        uint64 inboundBlockConfirmations;\\r\\n        address relayer;\\r\\n        uint16 outboundProofType;\\r\\n        uint64 outboundBlockConfirmations;\\r\\n        address oracle;\\r\\n    }\\r\\n\\r\\n    event HashReceived(uint16 indexed srcChainId, address indexed oracle, bytes32 lookupHash, bytes32 blockData, uint confirmations);\\r\\n    event RelayerParams(bytes adapterParams, uint16 outboundProofType);\\r\\n    event Packet(bytes payload);\\r\\n    event InvalidDst(uint16 indexed srcChainId, bytes srcAddress, address indexed dstAddress, uint64 nonce, bytes32 payloadHash);\\r\\n    event PacketReceived(uint16 indexed srcChainId, bytes srcAddress, address indexed dstAddress, uint64 nonce, bytes32 payloadHash);\\r\\n    event AppConfigUpdated(address indexed userApplication, uint indexed configType, bytes newConfig);\\r\\n    event AddInboundProofLibraryForChain(uint16 indexed chainId, address lib);\\r\\n    event EnableSupportedOutboundProof(uint16 indexed chainId, uint16 proofType);\\r\\n    event SetChainAddressSize(uint16 indexed chainId, uint size);\\r\\n    event SetDefaultConfigForChainId(uint16 indexed chainId, uint16 inboundProofLib, uint64 inboundBlockConfirm, address relayer, uint16 outboundProofType, uint64 outboundBlockConfirm, address oracle);\\r\\n    event SetDefaultAdapterParamsForChainId(uint16 indexed chainId, uint16 indexed proofType, bytes adapterParams);\\r\\n    event SetLayerZeroToken(address indexed tokenAddress);\\r\\n    event SetRemoteUln(uint16 indexed chainId, bytes32 uln);\\r\\n    event SetTreasury(address indexed treasuryAddress);\\r\\n    event WithdrawZRO(address indexed msgSender, address indexed to, uint amount);\\r\\n    event WithdrawNative(address indexed msgSender, address indexed to, uint amount);\\r\\n}\\r\\n\",\"keccak256\":\"0xec9d3147e943dc34f8ca8721edfafc8cb04346760d432dd7c9b88d64adb47623\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x42d10415d035529fcdff738d6542844ad58124b4e1da5a8ff92d6ddd8bf96513\",\"license\":\"MIT\"},\"contracts/mContracts/lzContracts/NonceContract.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"../../interfaces/ILayerZeroEndpoint.sol\\\";\\r\\n\\r\\ncontract NonceContract {\\r\\n    ILayerZeroEndpoint public immutable endpoint;\\r\\n    // outboundNonce = [dstChainId][remoteAddress + localAddress]\\r\\n    mapping(uint16 => mapping(bytes => uint64)) public outboundNonce;\\r\\n\\r\\n    constructor(address _endpoint) {\\r\\n        endpoint = ILayerZeroEndpoint(_endpoint);\\r\\n    }\\r\\n\\r\\n    function increment(uint16 _chainId, address _ua, bytes calldata _path) external returns (uint64) {\\r\\n        require(endpoint.getSendLibraryAddress(_ua) == msg.sender, \\\"NonceContract: msg.sender is not valid sendlibrary\\\");\\r\\n        return ++outboundNonce[_chainId][_path];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0866da6a247656cf0462c6845951f4961a07ffbdf6f3e50a1472765e895cfa9b\",\"license\":\"BUSL-1.1\"},\"contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\npragma abicoder v2;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\n\\r\\n// import \\\"../../interfaces/ILayerZeroValidationLibrary.sol\\\";\\r\\nimport \\\"../../interfaces/ILayerZeroReceiver.sol\\\";\\r\\nimport \\\"../../interfaces/ILayerZeroTreasury.sol\\\";\\r\\nimport \\\"../../interfaces/ILayerZeroEndpoint.sol\\\";\\r\\n// v2\\r\\nimport \\\"../../interfaces/ILayerZeroMessagingLibraryV2.sol\\\";\\r\\n// import \\\"./interfaces/ILayerZeroOracleV2.sol\\\";\\r\\nimport \\\"../../interfaces/ILayerZeroUltraLightNodeV2.sol\\\";\\r\\nimport \\\"../../interfaces/ILayerZeroRelayerV2.sol\\\";\\r\\nimport \\\"./NonceContract.sol\\\";\\r\\n\\r\\n\\r\\n\\r\\ncontract UltraLightNodeV2_wo_Validation is ILayerZeroMessagingLibraryV2, ILayerZeroUltraLightNodeV2, ReentrancyGuard, Ownable {\\r\\n    using SafeERC20 for IERC20;\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    // Application config\\r\\n    uint public constant CONFIG_TYPE_INBOUND_PROOF_LIBRARY_VERSION = 1;\\r\\n    uint public constant CONFIG_TYPE_INBOUND_BLOCK_CONFIRMATIONS = 2;\\r\\n    uint public constant CONFIG_TYPE_RELAYER = 3;\\r\\n    uint public constant CONFIG_TYPE_OUTBOUND_PROOF_TYPE = 4;\\r\\n    uint public constant CONFIG_TYPE_OUTBOUND_BLOCK_CONFIRMATIONS = 5;\\r\\n    uint public constant CONFIG_TYPE_ORACLE = 6;\\r\\n\\r\\n    // Token and Contracts\\r\\n    IERC20 public layerZeroToken;\\r\\n    ILayerZeroTreasury public treasuryContract;\\r\\n\\r\\n    mapping(address => uint) public nativeFees;\\r\\n    uint public treasuryZROFees;\\r\\n\\r\\n    // User Application\\r\\n    mapping(address => mapping(uint16 => ApplicationConfiguration)) public appConfig; // app address => chainId => config\\r\\n    mapping(uint16 => ApplicationConfiguration) public defaultAppConfig; // default UA settings if no version specified\\r\\n    mapping(uint16 => mapping(uint16 => bytes)) public defaultAdapterParams;\\r\\n\\r\\n    // Validation\\r\\n    mapping(uint16 => mapping(uint16 => address)) public inboundProofLibrary; // chainId => library Id => inboundProofLibrary contract\\r\\n    mapping(uint16 => uint16) public maxInboundProofLibrary; // chainId => inboundProofLibrary\\r\\n    mapping(uint16 => mapping(uint16 => bool)) public supportedOutboundProof; // chainId => outboundProofType => enabled\\r\\n    mapping(uint16 => uint) public chainAddressSizeMap;\\r\\n    mapping(address => mapping(uint16 => mapping(bytes32 => mapping(bytes32 => uint)))) public hashLookup; //[oracle][srcChainId][blockhash][datahash] -> confirmation\\r\\n    mapping(uint16 => bytes32) public ulnLookup; // remote ulns\\r\\n\\r\\n    ILayerZeroEndpoint public immutable endpoint;\\r\\n    uint16 public immutable localChainId;\\r\\n    NonceContract public immutable nonceContract;\\r\\n\\r\\n    constructor(address _endpoint, address _nonceContract, uint16 _localChainId) {\\r\\n        require(_endpoint != address(0x0), \\\"LayerZero: endpoint cannot be zero address\\\");\\r\\n        require(_nonceContract != address(0x0), \\\"LayerZero: nonceContract cannot be zero address\\\");\\r\\n        ILayerZeroEndpoint lzEndpoint = ILayerZeroEndpoint(_endpoint);\\r\\n        localChainId = _localChainId;\\r\\n        endpoint = lzEndpoint;\\r\\n        nonceContract = NonceContract(_nonceContract);\\r\\n    }\\r\\n\\r\\n    // only the endpoint can call SEND() and setConfig()\\r\\n    modifier onlyEndpoint() {\\r\\n        require(address(endpoint) == msg.sender, \\\"LayerZero: only endpoint\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //----------------------------------------------------------------------------------\\r\\n    // PROTOCOL\\r\\n    function validateTransactionProof(uint16 _srcChainId, address _dstAddress, uint _gasLimit, bytes32 _lookupHash, bytes32 _blockData, bytes calldata _transactionProof) external override {\\r\\n    //     // retrieve UA's configuration using the _dstAddress from arguments.\\r\\n    //     ApplicationConfiguration memory uaConfig = _getAppConfig(_srcChainId, _dstAddress);\\r\\n\\r\\n    //     // assert that the caller == UA's relayer\\r\\n    //     require(uaConfig.relayer == msg.sender, \\\"LayerZero: invalid relayer\\\");\\r\\n\\r\\n    //     // Mock. Remove validation for test.\\r\\n    //     LayerZeroPacket.Packet memory _packet;\\r\\n    //     uint remoteAddressSize = chainAddressSizeMap[_srcChainId];\\r\\n    //     require(remoteAddressSize != 0, \\\"LayerZero: incorrect remote address size\\\");\\r\\n    //     {\\r\\n    //         // assert that the data submitted by UA's oracle have no fewer confirmations than UA's configuration\\r\\n    //         uint storedConfirmations = hashLookup[uaConfig.oracle][_srcChainId][_lookupHash][_blockData];\\r\\n    //         require(storedConfirmations > 0 && storedConfirmations >= uaConfig.inboundBlockConfirmations, \\\"LayerZero: not enough block confirmations\\\");\\r\\n\\r\\n    //         // decode\\r\\n    //         address inboundProofLib = inboundProofLibrary[_srcChainId][uaConfig.inboundProofLibraryVersion];\\r\\n    //         _packet = ILayerZeroValidationLibrary(inboundProofLib).validateProof(_blockData, _transactionProof, remoteAddressSize);\\r\\n    //     }\\r\\n\\r\\n    //     // packet content assertion\\r\\n    //     require(ulnLookup[_srcChainId] == _packet.ulnAddress && _packet.ulnAddress != bytes32(0), \\\"LayerZero: invalid _packet.ulnAddress\\\");\\r\\n    //     require(_packet.srcChainId == _srcChainId, \\\"LayerZero: invalid srcChain Id\\\");\\r\\n    //     // failsafe because the remoteAddress size being passed into validateProof trims the address this should not hit\\r\\n    //     require(_packet.srcAddress.length == remoteAddressSize, \\\"LayerZero: invalid srcAddress size\\\");\\r\\n    //     require(_packet.dstChainId == localChainId, \\\"LayerZero: invalid dstChain Id\\\");\\r\\n    //     require(_packet.dstAddress == _dstAddress, \\\"LayerZero: invalid dstAddress\\\");\\r\\n\\r\\n    //     // if the dst is not a contract, then emit and return early. This will break inbound nonces, but this particular\\r\\n    //     // path is already broken and wont ever be able to deliver anyways\\r\\n    //     if (!_isContract(_dstAddress)) {\\r\\n    //         emit InvalidDst(_packet.srcChainId, _packet.srcAddress, _packet.dstAddress, _packet.nonce, keccak256(_packet.payload));\\r\\n    //         return;\\r\\n    //     }\\r\\n\\r\\n    //     bytes memory pathData = abi.encodePacked(_packet.srcAddress, _packet.dstAddress);\\r\\n    //     emit PacketReceived(_packet.srcChainId, _packet.srcAddress, _packet.dstAddress, _packet.nonce, keccak256(_packet.payload));\\r\\n    //     endpoint.receivePayload(_srcChainId, pathData, _dstAddress, _packet.nonce, _gasLimit, _packet.payload);\\r\\n    }\\r\\n\\r\\n    function receivePayload_withNoValidation(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external {\\r\\n        bytes memory pathData = abi.encodePacked(_srcAddress, _dstAddress);\\r\\n        endpoint.receivePayload(_srcChainId, pathData, _dstAddress, _nonce, _gasLimit, _payload);\\r\\n    }\\r\\n\\r\\n    function send(address _ua, uint64, uint16 _dstChainId, bytes calldata _path, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable override onlyEndpoint {\\r\\n        address ua = _ua;\\r\\n        uint16 dstChainId = _dstChainId;\\r\\n        require(ulnLookup[dstChainId] != bytes32(0), \\\"LayerZero: dstChainId does not exist\\\");\\r\\n\\r\\n        bytes memory dstAddress;\\r\\n        uint64 nonce;\\r\\n        // code block for solving 'Stack Too Deep'\\r\\n        {\\r\\n            uint chainAddressSize = chainAddressSizeMap[dstChainId];\\r\\n            // path = remoteAddress + localAddress\\r\\n            require(chainAddressSize != 0 && _path.length == 20 + chainAddressSize, \\\"LayerZero: incorrect remote address size\\\");\\r\\n            address srcInPath;\\r\\n            bytes memory path = _path; // copy to memory\\r\\n            assembly {\\r\\n                srcInPath := mload(add(add(path, 20), chainAddressSize)) // chainAddressSize + 20\\r\\n            }\\r\\n            require(ua == srcInPath, \\\"LayerZero: wrong path data\\\");\\r\\n            dstAddress = _path[0:chainAddressSize];\\r\\n            nonce = nonceContract.increment(dstChainId, ua, path);\\r\\n        }\\r\\n\\r\\n        bytes memory payload = _payload;\\r\\n        ApplicationConfiguration memory uaConfig = _getAppConfig(dstChainId, ua);\\r\\n\\r\\n        // compute all the fees\\r\\n        uint relayerFee = _handleRelayer(dstChainId, uaConfig, ua, payload.length, _adapterParams);\\r\\n        uint oracleFee = 0; //_handleOracle(dstChainId, uaConfig, ua);\\r\\n        uint nativeProtocolFee = _handleProtocolFee(relayerFee, oracleFee, ua, _zroPaymentAddress);\\r\\n\\r\\n        {\\r\\n            // total native fee, does not include ZRO protocol fee\\r\\n            uint totalNativeFee = relayerFee.add(oracleFee).add(nativeProtocolFee);\\r\\n\\r\\n            // assert the user has attached enough native token for this address\\r\\n            require(totalNativeFee <= msg.value, \\\"LayerZero: not enough native for fees\\\");\\r\\n\\r\\n            // refund if they send too much\\r\\n            uint amount = msg.value.sub(totalNativeFee);\\r\\n            if (amount > 0) {\\r\\n                (bool success, ) = _refundAddress.call{value: amount}(\\\"\\\");\\r\\n                require(success, \\\"LayerZero: failed to refund\\\");\\r\\n            }\\r\\n        }\\r\\n\\r\\n        uint16 mock_srcChainId = uint16(uint160(ua));   // wish for luck and no conflict.\\r\\n\\r\\n        // emit the data packet\\r\\n        bytes memory encodedPayload = abi.encodePacked(nonce, mock_srcChainId, ua, dstChainId, dstAddress, payload);\\r\\n        emit Packet(encodedPayload);\\r\\n    }\\r\\n\\r\\n    function _handleRelayer(uint16 _dstChainId, ApplicationConfiguration memory _uaConfig, address _ua, uint _payloadSize, bytes memory _adapterParams) internal returns (uint relayerFee) {\\r\\n        if (_adapterParams.length == 0) {\\r\\n            _adapterParams = defaultAdapterParams[_dstChainId][_uaConfig.outboundProofType];\\r\\n        }\\r\\n        address relayerAddress = _uaConfig.relayer;\\r\\n        ILayerZeroRelayerV2 relayer = ILayerZeroRelayerV2(relayerAddress);\\r\\n        relayerFee = relayer.assignJob(_dstChainId, _uaConfig.outboundProofType, _ua, _payloadSize, _adapterParams);\\r\\n\\r\\n        _creditNativeFee(relayerAddress, relayerFee);\\r\\n\\r\\n        // emit the param events\\r\\n        emit RelayerParams(_adapterParams, _uaConfig.outboundProofType);\\r\\n    }\\r\\n\\r\\n    // function _handleOracle(uint16 _dstChainId, ApplicationConfiguration memory _uaConfig, address _ua) internal returns (uint oracleFee) {\\r\\n    //     address oracleAddress = _uaConfig.oracle;\\r\\n    //     oracleFee = ILayerZeroOracleV2(oracleAddress).assignJob(_dstChainId, _uaConfig.outboundProofType, _uaConfig.outboundBlockConfirmations, _ua);\\r\\n\\r\\n    //     _creditNativeFee(oracleAddress, oracleFee);\\r\\n    // }\\r\\n\\r\\n    function _handleProtocolFee(uint _relayerFee, uint _oracleFee, address _ua, address _zroPaymentAddress) internal returns (uint protocolNativeFee) {\\r\\n        // if no ZRO token or not specifying a payment address, pay in native token\\r\\n        bool payInNative = _zroPaymentAddress == address(0x0) || address(layerZeroToken) == address(0x0);\\r\\n        uint protocolFee = treasuryContract.getFees(!payInNative, _relayerFee, _oracleFee);\\r\\n\\r\\n        if (protocolFee > 0) {\\r\\n            if (payInNative) {\\r\\n                address treasuryAddress = address(treasuryContract);\\r\\n                _creditNativeFee(treasuryAddress, protocolFee);\\r\\n                protocolNativeFee = protocolFee;\\r\\n            } else {\\r\\n                // zro payment address must equal the ua or the tx.origin otherwise the transaction reverts\\r\\n                require(_zroPaymentAddress == _ua || _zroPaymentAddress == tx.origin, \\\"LayerZero: must be paid by sender or origin\\\");\\r\\n\\r\\n                // transfer the LayerZero token to this contract from the payee\\r\\n                layerZeroToken.safeTransferFrom(_zroPaymentAddress, address(this), protocolFee);\\r\\n\\r\\n                treasuryZROFees = treasuryZROFees.add(protocolFee);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _creditNativeFee(address _receiver, uint _amount) internal {\\r\\n        nativeFees[_receiver] = nativeFees[_receiver].add(_amount);\\r\\n    }\\r\\n\\r\\n    // Can be called by any address to update a block header\\r\\n    // can only upload new block data or the same block data with more confirmations\\r\\n    function updateHash(uint16 _srcChainId, bytes32 _lookupHash, uint _confirmations, bytes32 _blockData) external override {\\r\\n        uint storedConfirmations = hashLookup[msg.sender][_srcChainId][_lookupHash][_blockData];\\r\\n\\r\\n        // if it has a record, requires a larger confirmation.\\r\\n        require(storedConfirmations < _confirmations, \\\"LayerZero: oracle data can only update if it has more confirmations\\\");\\r\\n\\r\\n        // set the new information into storage\\r\\n        hashLookup[msg.sender][_srcChainId][_lookupHash][_blockData] = _confirmations;\\r\\n\\r\\n        emit HashReceived(_srcChainId, msg.sender, _lookupHash, _blockData, _confirmations);\\r\\n    }\\r\\n\\r\\n    //----------------------------------------------------------------------------------\\r\\n    // Other Library Interfaces\\r\\n\\r\\n    // default to DEFAULT setting if ZERO value\\r\\n    function getAppConfig(uint16 _remoteChainId, address _ua) external view override returns (ApplicationConfiguration memory) {\\r\\n        return _getAppConfig(_remoteChainId, _ua);\\r\\n    }\\r\\n\\r\\n    function _getAppConfig(uint16 _remoteChainId, address _ua) internal view returns (ApplicationConfiguration memory) {\\r\\n        ApplicationConfiguration memory config = appConfig[_ua][_remoteChainId];\\r\\n        ApplicationConfiguration storage defaultConfig = defaultAppConfig[_remoteChainId];\\r\\n\\r\\n        if (config.inboundProofLibraryVersion == 0) {\\r\\n            config.inboundProofLibraryVersion = defaultConfig.inboundProofLibraryVersion;\\r\\n        }\\r\\n\\r\\n        if (config.inboundBlockConfirmations == 0) {\\r\\n            config.inboundBlockConfirmations = defaultConfig.inboundBlockConfirmations;\\r\\n        }\\r\\n\\r\\n        if (config.relayer == address(0x0)) {\\r\\n            config.relayer = defaultConfig.relayer;\\r\\n        }\\r\\n\\r\\n        if (config.outboundProofType == 0) {\\r\\n            config.outboundProofType = defaultConfig.outboundProofType;\\r\\n        }\\r\\n\\r\\n        if (config.outboundBlockConfirmations == 0) {\\r\\n            config.outboundBlockConfirmations = defaultConfig.outboundBlockConfirmations;\\r\\n        }\\r\\n\\r\\n        if (config.oracle == address(0x0)) {\\r\\n            config.oracle = defaultConfig.oracle;\\r\\n        }\\r\\n\\r\\n        return config;\\r\\n    }\\r\\n\\r\\n    function setConfig(uint16 _remoteChainId, address _ua, uint _configType, bytes calldata _config) external override onlyEndpoint {\\r\\n        ApplicationConfiguration storage uaConfig = appConfig[_ua][_remoteChainId];\\r\\n        if (_configType == CONFIG_TYPE_INBOUND_PROOF_LIBRARY_VERSION) {\\r\\n            uint16 inboundProofLibraryVersion = abi.decode(_config, (uint16));\\r\\n            require(inboundProofLibraryVersion <= maxInboundProofLibrary[_remoteChainId], \\\"LayerZero: invalid inbound proof library version\\\");\\r\\n            uaConfig.inboundProofLibraryVersion = inboundProofLibraryVersion;\\r\\n        } else if (_configType == CONFIG_TYPE_INBOUND_BLOCK_CONFIRMATIONS) {\\r\\n            uint64 blockConfirmations = abi.decode(_config, (uint64));\\r\\n            uaConfig.inboundBlockConfirmations = blockConfirmations;\\r\\n        } else if (_configType == CONFIG_TYPE_RELAYER) {\\r\\n            address relayer = abi.decode(_config, (address));\\r\\n            uaConfig.relayer = relayer;\\r\\n        } else if (_configType == CONFIG_TYPE_OUTBOUND_PROOF_TYPE) {\\r\\n            uint16 outboundProofType = abi.decode(_config, (uint16));\\r\\n            require(supportedOutboundProof[_remoteChainId][outboundProofType] || outboundProofType == 0, \\\"LayerZero: invalid outbound proof type\\\");\\r\\n            uaConfig.outboundProofType = outboundProofType;\\r\\n        } else if (_configType == CONFIG_TYPE_OUTBOUND_BLOCK_CONFIRMATIONS) {\\r\\n            uint64 blockConfirmations = abi.decode(_config, (uint64));\\r\\n            uaConfig.outboundBlockConfirmations = blockConfirmations;\\r\\n        } else if (_configType == CONFIG_TYPE_ORACLE) {\\r\\n            address oracle = abi.decode(_config, (address));\\r\\n            uaConfig.oracle = oracle;\\r\\n        } else {\\r\\n            revert(\\\"LayerZero: Invalid config type\\\");\\r\\n        }\\r\\n\\r\\n        emit AppConfigUpdated(_ua, _configType, _config);\\r\\n    }\\r\\n\\r\\n    function getConfig(uint16 _remoteChainId, address _ua, uint _configType) external view override returns (bytes memory) {\\r\\n        ApplicationConfiguration storage uaConfig = appConfig[_ua][_remoteChainId];\\r\\n\\r\\n        if (_configType == CONFIG_TYPE_INBOUND_PROOF_LIBRARY_VERSION) {\\r\\n            if (uaConfig.inboundProofLibraryVersion == 0) {\\r\\n                return abi.encode(defaultAppConfig[_remoteChainId].inboundProofLibraryVersion);\\r\\n            }\\r\\n            return abi.encode(uaConfig.inboundProofLibraryVersion);\\r\\n        } else if (_configType == CONFIG_TYPE_INBOUND_BLOCK_CONFIRMATIONS) {\\r\\n            if (uaConfig.inboundBlockConfirmations == 0) {\\r\\n                return abi.encode(defaultAppConfig[_remoteChainId].inboundBlockConfirmations);\\r\\n            }\\r\\n            return abi.encode(uaConfig.inboundBlockConfirmations);\\r\\n        } else if (_configType == CONFIG_TYPE_RELAYER) {\\r\\n            if (uaConfig.relayer == address(0x0)) {\\r\\n                return abi.encode(defaultAppConfig[_remoteChainId].relayer);\\r\\n            }\\r\\n            return abi.encode(uaConfig.relayer);\\r\\n        } else if (_configType == CONFIG_TYPE_OUTBOUND_PROOF_TYPE) {\\r\\n            if (uaConfig.outboundProofType == 0) {\\r\\n                return abi.encode(defaultAppConfig[_remoteChainId].outboundProofType);\\r\\n            }\\r\\n            return abi.encode(uaConfig.outboundProofType);\\r\\n        } else if (_configType == CONFIG_TYPE_OUTBOUND_BLOCK_CONFIRMATIONS) {\\r\\n            if (uaConfig.outboundBlockConfirmations == 0) {\\r\\n                return abi.encode(defaultAppConfig[_remoteChainId].outboundBlockConfirmations);\\r\\n            }\\r\\n            return abi.encode(uaConfig.outboundBlockConfirmations);\\r\\n        } else if (_configType == CONFIG_TYPE_ORACLE) {\\r\\n            if (uaConfig.oracle == address(0x0)) {\\r\\n                return abi.encode(defaultAppConfig[_remoteChainId].oracle);\\r\\n            }\\r\\n            return abi.encode(uaConfig.oracle);\\r\\n        } else {\\r\\n            revert(\\\"LayerZero: Invalid config type\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // returns the native fee the UA pays to cover fees\\r\\n    function estimateFees(uint16 _dstChainId, address _ua, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParams) external view override returns (uint nativeFee, uint zroFee) {\\r\\n        ApplicationConfiguration memory uaConfig = _getAppConfig(_dstChainId, _ua);\\r\\n\\r\\n        // Relayer Fee\\r\\n        bytes memory adapterParams;\\r\\n        if (_adapterParams.length > 0) {\\r\\n            adapterParams = _adapterParams;\\r\\n        } else {\\r\\n            adapterParams = defaultAdapterParams[_dstChainId][uaConfig.outboundProofType];\\r\\n        }\\r\\n        uint relayerFee = ILayerZeroRelayerV2(uaConfig.relayer).getFee(_dstChainId, uaConfig.outboundProofType, _ua, _payload.length, adapterParams);\\r\\n\\r\\n        // Oracle Fee\\r\\n        address ua = _ua; // stack too deep\\r\\n        uint oracleFee = 0; //ILayerZeroOracleV2(uaConfig.oracle).getFee(_dstChainId, uaConfig.outboundProofType, uaConfig.outboundBlockConfirmations, ua);\\r\\n\\r\\n        // LayerZero Fee\\r\\n        uint protocolFee = treasuryContract.getFees(_payInZRO, relayerFee, oracleFee);\\r\\n        _payInZRO ? zroFee = protocolFee : nativeFee = protocolFee;\\r\\n\\r\\n        // return the sum of fees\\r\\n        nativeFee = nativeFee.add(relayerFee).add(oracleFee);\\r\\n    }\\r\\n\\r\\n    //---------------------------------------------------------------------------\\r\\n    // Claim Fees\\r\\n\\r\\n    // universal withdraw ZRO token function\\r\\n    function withdrawZRO(address _to, uint _amount) external override nonReentrant {\\r\\n        require(msg.sender == address(treasuryContract), \\\"LayerZero: only treasury\\\");\\r\\n        treasuryZROFees = treasuryZROFees.sub(_amount);\\r\\n        layerZeroToken.safeTransfer(_to, _amount);\\r\\n        emit WithdrawZRO(msg.sender, _to, _amount);\\r\\n    }\\r\\n\\r\\n    // universal withdraw native token function.\\r\\n    // the source contract should perform all the authentication control\\r\\n    function withdrawNative(address payable _to, uint _amount) external override nonReentrant {\\r\\n        require(_to != address(0x0), \\\"LayerZero: _to cannot be zero address\\\");\\r\\n        nativeFees[msg.sender] = nativeFees[msg.sender].sub(_amount);\\r\\n\\r\\n        (bool success, ) = _to.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"LayerZero: withdraw failed\\\");\\r\\n        emit WithdrawNative(msg.sender, _to, _amount);\\r\\n    }\\r\\n\\r\\n    //---------------------------------------------------------------------------\\r\\n    // Owner calls, configuration only.\\r\\n    function setLayerZeroToken(address _layerZeroToken) external onlyOwner {\\r\\n        require(_layerZeroToken != address(0x0), \\\"LayerZero: _layerZeroToken cannot be zero address\\\");\\r\\n        layerZeroToken = IERC20(_layerZeroToken);\\r\\n        emit SetLayerZeroToken(_layerZeroToken);\\r\\n    }\\r\\n\\r\\n    function setTreasury(address _treasury) external onlyOwner {\\r\\n        require(_treasury != address(0x0), \\\"LayerZero: treasury cannot be zero address\\\");\\r\\n        treasuryContract = ILayerZeroTreasury(_treasury);\\r\\n        emit SetTreasury(_treasury);\\r\\n    }\\r\\n\\r\\n    function addInboundProofLibraryForChain(uint16 _chainId, address _library) external onlyOwner {\\r\\n        require(_library != address(0x0), \\\"LayerZero: library cannot be zero address\\\");\\r\\n        uint16 libId = maxInboundProofLibrary[_chainId];\\r\\n        require(libId < 65535, \\\"LayerZero: can not add new library\\\");\\r\\n        maxInboundProofLibrary[_chainId] = ++libId;\\r\\n        inboundProofLibrary[_chainId][libId] = _library;\\r\\n        emit AddInboundProofLibraryForChain(_chainId, _library);\\r\\n    }\\r\\n\\r\\n    function enableSupportedOutboundProof(uint16 _chainId, uint16 _proofType) external onlyOwner {\\r\\n        supportedOutboundProof[_chainId][_proofType] = true;\\r\\n        emit EnableSupportedOutboundProof(_chainId, _proofType);\\r\\n    }\\r\\n\\r\\n    function setDefaultConfigForChainId(uint16 _chainId, uint16 _inboundProofLibraryVersion, uint64 _inboundBlockConfirmations, address _relayer, uint16 _outboundProofType, uint64 _outboundBlockConfirmations, address _oracle) external onlyOwner {\\r\\n        require(_inboundProofLibraryVersion <= maxInboundProofLibrary[_chainId] && _inboundProofLibraryVersion > 0, \\\"LayerZero: invalid inbound proof library version\\\");\\r\\n        require(_inboundBlockConfirmations > 0, \\\"LayerZero: invalid inbound block confirmation\\\");\\r\\n        require(_relayer != address(0x0), \\\"LayerZero: invalid relayer address\\\");\\r\\n        require(supportedOutboundProof[_chainId][_outboundProofType], \\\"LayerZero: invalid outbound proof type\\\");\\r\\n        require(_outboundBlockConfirmations > 0, \\\"LayerZero: invalid outbound block confirmation\\\");\\r\\n        require(_oracle != address(0x0), \\\"LayerZero: invalid oracle address\\\");\\r\\n        defaultAppConfig[_chainId] = ApplicationConfiguration(_inboundProofLibraryVersion, _inboundBlockConfirmations, _relayer, _outboundProofType, _outboundBlockConfirmations, _oracle);\\r\\n        emit SetDefaultConfigForChainId(_chainId, _inboundProofLibraryVersion, _inboundBlockConfirmations, _relayer, _outboundProofType, _outboundBlockConfirmations, _oracle);\\r\\n    }\\r\\n\\r\\n    function setDefaultAdapterParamsForChainId(uint16 _chainId, uint16 _proofType, bytes calldata _adapterParams) external onlyOwner {\\r\\n        defaultAdapterParams[_chainId][_proofType] = _adapterParams;\\r\\n        emit SetDefaultAdapterParamsForChainId(_chainId, _proofType, _adapterParams);\\r\\n    }\\r\\n\\r\\n    function setRemoteUln(uint16 _remoteChainId, bytes32 _remoteUln) external onlyOwner {\\r\\n        require(ulnLookup[_remoteChainId] == bytes32(0), \\\"LayerZero: remote uln already set\\\");\\r\\n        ulnLookup[_remoteChainId] = _remoteUln;\\r\\n        emit SetRemoteUln(_remoteChainId, _remoteUln);\\r\\n    }\\r\\n\\r\\n    function setChainAddressSize(uint16 _chainId, uint _size) external onlyOwner {\\r\\n        require(chainAddressSizeMap[_chainId] == 0, \\\"LayerZero: remote chain address size already set\\\");\\r\\n        chainAddressSizeMap[_chainId] = _size;\\r\\n        emit SetChainAddressSize(_chainId, _size);\\r\\n    }\\r\\n\\r\\n    //----------------------------------------------------------------------------------\\r\\n    // view functions\\r\\n\\r\\n    function accruedNativeFee(address _address) external view override returns (uint) {\\r\\n        return nativeFees[_address];\\r\\n    }\\r\\n\\r\\n    function getOutboundNonce(uint16 _chainId, bytes calldata _path) external view override returns (uint64) {\\r\\n        return nonceContract.outboundNonce(_chainId, _path);\\r\\n    }\\r\\n\\r\\n    function _isContract(address addr) internal view returns (bool) {\\r\\n        uint size;\\r\\n        assembly {\\r\\n            size := extcodesize(addr)\\r\\n        }\\r\\n        return size != 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb7bfdba6c56f0392d66c05ab80b6409169e4ae9c5e5a220bc5650bacaaeb0e73\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102725760003560e01c80638317814a1161014f578063b9a99bed116100c1578063ed28580a1161007a578063ed28580a146109a6578063f0f44260146109c6578063f2fde38b146109e6578063f47a5feb14610a06578063f58589a214610a1c578063f8e1734c14610a4957600080fd5b8063b9a99bed14610813578063d543c7741461084b578063db00719b14610896578063ddfdef5a146108d7578063ea216c2114610959578063eb0d4c311461098657600080fd5b8063904d3b8d11610113578063904d3b8d146106d5578063959f5943146106ea578063987fa2d514610717578063a46622221461073b578063b77d22ad146107cd578063b8e7e3e0146107e257600080fd5b80638317814a146106375780638525b7111461065757806387078f9f146106775780638da5cb5b146106975780638debb0b5146106b557600080fd5b806352d2871f116101e85780636a14ac82116101ac5780636a14ac8214610566578063704316e514610586578063715018a6146105a6578063759c5b3b146105bb5780638140666e146106025780638207f79d1461061757600080fd5b806352d2871f1461047557806352d3b500146104955780635b056da5146104b55780635e280f11146104fc57806369412bfa1461053057600080fd5b80632cfacb061161023a5780632cfacb06146103575780632f8134641461037a57806331bd24301461040357806340a7bb101461041857806349148c371461044d5780634d3a0f7c1461046257600080fd5b806302bd97431461027757806307b18bde146102c857806307b9ca7c146102ea57806318da00111461030a5780632a819bbf1461032a575b600080fd5b34801561028357600080fd5b506102ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102d457600080fd5b506102e86102e3366004613165565b610a69565b005b3480156102f657600080fd5b506002546102ab906001600160a01b031681565b34801561031657600080fd5b506003546102ab906001600160a01b031681565b34801561033657600080fd5b5061034a6103453660046131a3565b610c3f565b6040516102bf919061322e565b34801561036357600080fd5b5061036c600381565b6040519081526020016102bf565b34801561038657600080fd5b506103f1610395366004613241565b6007602052600090815260409020805460019091015461ffff808316926001600160401b036201000082048116936001600160a01b03600160501b8404811694600160f01b9094049093169291811691600160401b9091041686565b6040516102bf9695949392919061325c565b34801561040f57600080fd5b5061036c600681565b34801561042457600080fd5b506104386104333660046132fa565b610ce4565b604080519283526020830191909152016102bf565b34801561045957600080fd5b5061036c600281565b6102e86104703660046133c1565b610f33565b34801561048157600080fd5b5061034a6104903660046134b4565b611471565b3480156104a157600080fd5b506102e86104b03660046134f3565b611795565b3480156104c157600080fd5b506104e97f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff90911681526020016102bf565b34801561050857600080fd5b506102ab7f000000000000000000000000000000000000000000000000000000000000000081565b34801561053c57600080fd5b5061036c61054b3660046134f3565b6001600160a01b031660009081526004602052604090205490565b34801561057257600080fd5b506102e8610581366004613510565b611857565b34801561059257600080fd5b506102e86105a13660046135a0565b611c47565b3480156105b257600080fd5b506102e8611d6f565b3480156105c757600080fd5b5061036c6105d63660046135d9565b600d60209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561060e57600080fd5b5061036c600481565b34801561062357600080fd5b506102e861063236600461361d565b611d83565b34801561064357600080fd5b506102e8610652366004613654565b611ef9565b34801561066357600080fd5b506102e8610672366004613165565b611f76565b34801561068357600080fd5b506102e86106923660046136b4565b612098565b3480156106a357600080fd5b506001546001600160a01b03166102ab565b3480156106c157600080fd5b506102e86106d03660046136d0565b61216e565b3480156106e157600080fd5b5061036c600581565b3480156106f657600080fd5b5061036c610705366004613241565b600c6020526000908152604090205481565b34801561072357600080fd5b506102e8610732366004613782565b50505050505050565b34801561074757600080fd5b5061075b61075636600461361d565b61222a565b6040516102bf9190600060c08201905061ffff80845116835260208401516001600160401b0380821660208601526040860151915060018060a01b0380831660408701528360608801511660608701528160808801511660808701528060a08801511660a08701525050505092915050565b3480156107d957600080fd5b5061036c600181565b3480156107ee57600080fd5b506104e96107fd366004613241565b600a6020526000908152604090205461ffff1681565b34801561081f57600080fd5b5061083361082e3660046137f2565b612266565b6040516001600160401b0390911681526020016102bf565b34801561085757600080fd5b506108866108663660046131a3565b600b60209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016102bf565b3480156108a257600080fd5b506102ab6108b13660046131a3565b60096020908152600092835260408084209091529082529020546001600160a01b031681565b3480156108e357600080fd5b506103f16108f2366004613844565b60066020908152600092835260408084209091529082529020805460019091015461ffff808316926001600160401b036201000082048116936001600160a01b03600160501b8404811694600160f01b9094049093169291811691600160401b9091041686565b34801561096557600080fd5b5061036c610974366004613241565b600e6020526000908152604090205481565b34801561099257600080fd5b506102e86109a13660046131a3565b612302565b3480156109b257600080fd5b506102e86109c13660046136b4565b612368565b3480156109d257600080fd5b506102e86109e13660046134f3565b612423565b3480156109f257600080fd5b506102e8610a013660046134f3565b6124de565b348015610a1257600080fd5b5061036c60055481565b348015610a2857600080fd5b5061036c610a373660046134f3565b60046020526000908152604090205481565b348015610a5557600080fd5b506102e8610a64366004613862565b612557565b60026000541415610ac15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556001600160a01b038216610b2a5760405162461bcd60e51b815260206004820152602560248201527f4c617965725a65726f3a205f746f2063616e6e6f74206265207a65726f206164604482015264647265737360d81b6064820152608401610ab8565b33600090815260046020526040902054610b449082612850565b336000908152600460205260408082209290925590516001600160a01b0384169083908381818185875af1925050503d8060008114610b9f576040519150601f19603f3d011682016040523d82523d6000602084013e610ba4565b606091505b5050905080610bf55760405162461bcd60e51b815260206004820152601a60248201527f4c617965725a65726f3a207769746864726177206661696c65640000000000006044820152606401610ab8565b6040518281526001600160a01b0384169033907f3bfd26201736b5cb14a562ab3cfc2bef76901726e3a78483d6288af47131e1d99060200160405180910390a35050600160005550565b600860209081526000928352604080842090915290825290208054610c63906138d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8f906138d2565b8015610cdc5780601f10610cb157610100808354040283529160200191610cdc565b820191906000526020600020905b815481529060010190602001808311610cbf57829003601f168201915b505050505081565b6000806000610cf38a8a61285c565b905060608415610d3c5785858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350610ded92505050565b61ffff808c16600090815260086020908152604080832060608701519094168352929052208054610d6c906138d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610d98906138d2565b8015610de55780601f10610dba57610100808354040283529160200191610de5565b820191906000526020600020905b815481529060010190602001808311610dc857829003601f168201915b505050505090505b600082604001516001600160a01b031663c03f15298d85606001518e8e8e9050876040518663ffffffff1660e01b8152600401610e2e95949392919061390d565b602060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6f919061394a565b600354604051635cbbbd7560e01b81528a15156004820152602481018390526000604482018190529293508d929182916001600160a01b0390911690635cbbbd7590606401602060405180830381865afa158015610ed1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef5919061394a565b90508a610f055780975087610f0a565b809650865b50610f1f82610f198a87612a01565b90612a01565b975050505050505097509795505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314610fa65760405162461bcd60e51b815260206004820152601860248201527713185e595c96995c9bce881bdb9b1e48195b991c1bda5b9d60421b6044820152606401610ab8565b61ffff89166000908152600e60205260409020548b908a906110165760405162461bcd60e51b8152602060048201526024808201527f4c617965725a65726f3a20647374436861696e496420646f6573206e6f7420656044820152631e1a5cdd60e21b6064820152608401610ab8565b61ffff81166000908152600c60205260408120546060919080158015906110465750611043816014613979565b8c145b6110a35760405162461bcd60e51b815260206004820152602860248201527f4c617965725a65726f3a20696e636f72726563742072656d6f746520616464726044820152676573732073697a6560c01b6064820152608401610ab8565b6000808e8e8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505083810160140151925090506001600160a01b03878116908316146111425760405162461bcd60e51b815260206004820152601a60248201527f4c617965725a65726f3a2077726f6e67207061746820646174610000000000006044820152606401610ab8565b8e8e600090859261115593929190613991565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604051636fe7b67360e01b8152929750506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691636fe7b67391506111dc9089908b9086906004016139bb565b6020604051808303816000875af11580156111fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121f91906139f2565b935050505060008a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093945061126b925087915088905061285c565b905060006112b386838986518d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a0d92505050565b90506000806112c483838b8f612ba1565b905060006112d682610f198686612a01565b9050348111156113365760405162461bcd60e51b815260206004820152602560248201527f4c617965725a65726f3a206e6f7420656e6f756768206e617469766520666f72604482015264206665657360d81b6064820152608401610ab8565b60006113423483612850565b905080156113ef5760008f6001600160a01b03168260405160006040518083038185875af1925050503d8060008114611397576040519150601f19603f3d011682016040523d82523d6000602084013e61139c565b606091505b50509050806113ed5760405162461bcd60e51b815260206004820152601b60248201527f4c617965725a65726f3a206661696c656420746f20726566756e6400000000006044820152606401610ab8565b505b50506040518990600090611411908990849081908e908e908d90602001613a0f565b60405160208183030381529060405290507fe9bded5f24a4168e4f3bf44e00298c993b22376aad8c58c7dda9718a54cbea8281604051611451919061322e565b60405180910390a150505050505050505050505050505050505050505050565b6001600160a01b038216600090815260066020908152604080832061ffff87168452909152902060609060018314156114ff57805461ffff166114e85761ffff858116600090815260076020908152604091829020548251931690830152015b60405160208183030381529060405291505061178e565b80546040805161ffff9092166020830152016114d1565b60028314156115755780546201000090046001600160401b03166115545761ffff8516600090815260076020908152604091829020548251620100009091046001600160401b031691810191909152016114d1565b805460408051620100009092046001600160401b03166020830152016114d1565b60038314156115ee578054600160501b90046001600160a01b03166115cc5761ffff8516600090815260076020908152604091829020548251600160501b9091046001600160a01b031691810191909152016114d1565b805460408051600160501b9092046001600160a01b03166020830152016114d1565b6004831415611655578054600160f01b900461ffff166116385761ffff858116600090815260076020908152604091829020548251600160f01b90910490931690830152016114d1565b805460408051600160f01b90920461ffff166020830152016114d1565b60058314156116c45760018101546001600160401b03166116a55761ffff85166000908152600760209081526040918290206001015482516001600160401b0390911691810191909152016114d1565b6001810154604080516001600160401b039092166020830152016114d1565b6006831415611746576001810154600160401b90046001600160a01b03166117215761ffff8516600090815260076020908152604091829020600101548251600160401b9091046001600160a01b031691810191909152016114d1565b600181015460408051600160401b9092046001600160a01b03166020830152016114d1565b60405162461bcd60e51b815260206004820152601e60248201527f4c617965725a65726f3a20496e76616c696420636f6e666967207479706500006044820152606401610ab8565b9392505050565b61179d612d2c565b6001600160a01b03811661180d5760405162461bcd60e51b815260206004820152603160248201527f4c617965725a65726f3a205f6c617965725a65726f546f6b656e2063616e6e6f60448201527074206265207a65726f206164647265737360781b6064820152608401610ab8565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f33d644987381deff4408951d55afa136f124e22a7810b163b2aaa3ebef770f6490600090a250565b61185f612d2c565b61ffff8088166000908152600a602052604090205481169087161180159061188b575060008661ffff16115b6118a75760405162461bcd60e51b8152600401610ab890613a93565b6000856001600160401b0316116119165760405162461bcd60e51b815260206004820152602d60248201527f4c617965725a65726f3a20696e76616c696420696e626f756e6420626c6f636b60448201526c1031b7b73334b936b0ba34b7b760991b6064820152608401610ab8565b6001600160a01b0384166119775760405162461bcd60e51b815260206004820152602260248201527f4c617965725a65726f3a20696e76616c69642072656c61796572206164647265604482015261737360f01b6064820152608401610ab8565b61ffff8088166000908152600b602090815260408083209387168352929052205460ff166119b75760405162461bcd60e51b8152600401610ab890613ae3565b6000826001600160401b031611611a275760405162461bcd60e51b815260206004820152602e60248201527f4c617965725a65726f3a20696e76616c6964206f7574626f756e6420626c6f6360448201526d359031b7b73334b936b0ba34b7b760911b6064820152608401610ab8565b6001600160a01b038116611a875760405162461bcd60e51b815260206004820152602160248201527f4c617965725a65726f3a20696e76616c6964206f7261636c65206164647265736044820152607360f81b6064820152608401610ab8565b6040518060c001604052808761ffff168152602001866001600160401b03168152602001856001600160a01b031681526020018461ffff168152602001836001600160401b03168152602001826001600160a01b0316815250600760008961ffff1661ffff16815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550604082015181600001600a6101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600001601e6101000a81548161ffff021916908361ffff16021790555060808201518160010160006101000a8154816001600160401b0302191690836001600160401b0316021790555060a08201518160010160086101000a8154816001600160a01b0302191690836001600160a01b031602179055509050508661ffff167f5a76432853a0871c4e780def7f3ffc7912339b53f022ac31127fe5ff84a36fa1878787878787604051611c369695949392919061325c565b60405180910390a250505050505050565b336000908152600d6020908152604080832061ffff8816845282528083208684528252808320848452909152902054828110611cf75760405162461bcd60e51b815260206004820152604360248201527f4c617965725a65726f3a206f7261636c6520646174612063616e206f6e6c792060448201527f75706461746520696620697420686173206d6f726520636f6e6669726d6174696064820152626f6e7360e81b608482015260a401610ab8565b336000818152600d6020908152604080832061ffff8a168085529083528184208985528352818420878552835292819020879055805188815291820186905281018690527f74bbc026808dcba59692d6a8bb20596849ca718e10e2432c6cdf48af865bc5d99060600160405180910390a35050505050565b611d77612d2c565b611d816000612d86565b565b611d8b612d2c565b6001600160a01b038116611df35760405162461bcd60e51b815260206004820152602960248201527f4c617965725a65726f3a206c6962726172792063616e6e6f74206265207a65726044820152686f206164647265737360b81b6064820152608401610ab8565b61ffff8083166000908152600a60205260409020548116908110611e645760405162461bcd60e51b815260206004820152602260248201527f4c617965725a65726f3a2063616e206e6f7420616464206e6577206c69627261604482015261727960f01b6064820152608401610ab8565b611e6d81613b29565b61ffff8481166000818152600a60209081526040808320805461ffff19169587169586179055600982528083209483529381529083902080546001600160a01b0319166001600160a01b0388169081179091559251928352929350917f802d55279d51813cb7a9a98e8fd2d7bec5346cb830901c11b85d1650cb857e9a910160405180910390a2505050565b611f01612d2c565b61ffff8085166000908152600860209081526040808320938716835292905220611f2c9083836130a7565b508261ffff168461ffff167f4a5695eee2a74d548d5f5c485a3de99ace99e3b664c8e30a90f49be6ebb549328484604051611f68929190613b74565b60405180910390a350505050565b60026000541415611fc95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ab8565b60026000556003546001600160a01b031633146120285760405162461bcd60e51b815260206004820152601860248201527f4c617965725a65726f3a206f6e6c7920747265617375727900000000000000006044820152606401610ab8565b6005546120359082612850565b60055560025461204f906001600160a01b03168383612dd8565b6040518181526001600160a01b0383169033907f3a20c8c3cd1848485ae8261a52398bb9b26f195b717306b3cf7f058e62c095d59060200160405180910390a350506001600055565b6120a0612d2c565b61ffff82166000908152600c60205260409020541561211a5760405162461bcd60e51b815260206004820152603060248201527f4c617965725a65726f3a2072656d6f746520636861696e20616464726573732060448201526f1cda5e9948185b1c9958591e481cd95d60821b6064820152608401610ab8565b61ffff82166000818152600c602052604090819020839055517f0611bb2107e385b79ec826fff8ecc1c1248a7aae3c875c96668f8cfbf1734220906121629084815260200190565b60405180910390a25050565b600087878760405160200161218593929190613b88565b60408051601f198184030181529082905263c2fa481360e01b825291506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2fa4813906121ed908c9085908b908b908b908b908b90600401613bae565b600060405180830381600087803b15801561220757600080fd5b505af115801561221b573d6000803e3d6000fd5b50505050505050505050505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915261178e838361285c565b60405163c533338f60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c533338f906122b990879087908790600401613c11565b602060405180830381865afa1580156122d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122fa91906139f2565b949350505050565b61230a612d2c565b61ffff8281166000818152600b6020908152604080832094861680845294825291829020805460ff19166001179055905192835290917fec23bee6f88cfecebb09d6aaaed66f0ce110debc1f61117c8270a7116597df9a9101612162565b612370612d2c565b61ffff82166000908152600e6020526040902054156123db5760405162461bcd60e51b815260206004820152602160248201527f4c617965725a65726f3a2072656d6f746520756c6e20616c72656164792073656044820152601d60fa1b6064820152608401610ab8565b61ffff82166000818152600e602052604090819020839055517f0dad975e1d2fbe771c95cdcc7be9a1e61181de7173abe0a32b8f8f83140873e5906121629084815260200190565b61242b612d2c565b6001600160a01b0381166124945760405162461bcd60e51b815260206004820152602a60248201527f4c617965725a65726f3a2074726561737572792063616e6e6f74206265207a65604482015269726f206164647265737360b01b6064820152608401610ab8565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fcb7ef3e545f5cdb893f5c568ba710fe08f336375a2d9fd66e161033f8fc09ef390600090a250565b6124e6612d2c565b6001600160a01b03811661254b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ab8565b61255481612d86565b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146125ca5760405162461bcd60e51b815260206004820152601860248201527713185e595c96995c9bce881bdb9b1e48195b991c1bda5b9d60421b6044820152606401610ab8565b6001600160a01b038416600090815260066020908152604080832061ffff891684529091529020600184141561265a57600061260883850185613241565b61ffff8089166000908152600a602052604090205491925090811690821611156126445760405162461bcd60e51b8152600401610ab890613a93565b815461ffff191661ffff91909116178155612804565b600284141561269b57600061267183850185613c2f565b82546001600160401b03909116620100000269ffffffffffffffff00001990911617825550612804565b60038414156126f25760006126b2838501856134f3565b82546001600160a01b03909116600160501b027fffff0000000000000000000000000000000000000000ffffffffffffffffffff90911617825550612804565b600484141561277a57600061270983850185613241565b61ffff8089166000908152600b602090815260408083209385168352929052205490915060ff168061273d575061ffff8116155b6127595760405162461bcd60e51b8152600401610ab890613ae3565b815461ffff909116600160f01b026001600160f01b03909116178155612804565b60058414156127ba57600061279183850185613c2f565b60018301805467ffffffffffffffff19166001600160401b039290921691909117905550612804565b60068414156117465760006127d1838501856134f3565b6001830180546001600160a01b03909216600160401b0268010000000000000000600160e01b0319909216919091179055505b83856001600160a01b03167ffc01bf86212a14151d51d1be5c2ac64d67d5ec823dfc6f53298d7ce3f3d3d2528585604051612840929190613b74565b60405180910390a3505050505050565b600061178e8284613c4c565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091526001600160a01b03808316600090815260066020908152604080832061ffff808916808652918452828520835160c081018552815480841682526001600160401b03620100008204811683890152600160501b82048a1683880152600160f01b909104841660608301526001909201549182166080820152600160401b90910490961660a08701529084526007909252909120825190911661293357805461ffff1682525b60208201516001600160401b031661295c5780546201000090046001600160401b031660208301525b60408201516001600160a01b0316612986578054600160501b90046001600160a01b031660408301525b606082015161ffff166129a6578054600160f01b900461ffff1660608301525b60808201516001600160401b03166129cc5760018101546001600160401b031660808301525b60a08201516001600160a01b03166129f9576001810154600160401b90046001600160a01b031660a08301525b509392505050565b600061178e8284613979565b6000815160001415612aca5761ffff808716600090815260086020908152604080832060608a01519094168352929052208054612a49906138d2565b80601f0160208091040260200160405190810160405280929190818152602001828054612a75906138d2565b8015612ac25780601f10612a9757610100808354040283529160200191612ac2565b820191906000526020600020905b815481529060010190602001808311612aa557829003601f168201915b505050505091505b60408086015160608701519151635886ea6560e01b8152909182916001600160a01b03831691635886ea6591612b0a918c918b908b908b9060040161390d565b6020604051808303816000875af1158015612b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b4d919061394a565b9250612b598284612e40565b7fb0c632f55f1e1b3b2c3d82f41ee4716bb4c00f0f5d84cdafc141581bb8757a4f848860600151604051612b8e929190613c63565b60405180910390a1505095945050505050565b6000806001600160a01b0383161580612bc357506002546001600160a01b0316155b600354604051635cbbbd7560e01b81528215600482015260248101899052604481018890529192506000916001600160a01b0390911690635cbbbd7590606401602060405180830381865afa158015612c20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c44919061394a565b90508015612d22578115612c71576003546001600160a01b0316612c688183612e40565b81935050612d22565b846001600160a01b0316846001600160a01b03161480612c9957506001600160a01b03841632145b612cf95760405162461bcd60e51b815260206004820152602b60248201527f4c617965725a65726f3a206d75737420626520706169642062792073656e646560448201526a391037b91037b934b3b4b760a91b6064820152608401610ab8565b600254612d11906001600160a01b0316853084612e83565b600554612d1e9082612a01565b6005555b5050949350505050565b6001546001600160a01b03163314611d815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ab8565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b038316602482015260448101829052612e3b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612ec1565b505050565b6001600160a01b038216600090815260046020526040902054612e639082612a01565b6001600160a01b0390921660009081526004602052604090209190915550565b6040516001600160a01b0380851660248301528316604482015260648101829052612ebb9085906323b872dd60e01b90608401612e04565b50505050565b6000612f16826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612f939092919063ffffffff16565b805190915015612e3b5780806020019051810190612f349190613c89565b612e3b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ab8565b60606122fa8484600085856001600160a01b0385163b612ff55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ab8565b600080866001600160a01b031685876040516130119190613ca6565b60006040518083038185875af1925050503d806000811461304e576040519150601f19603f3d011682016040523d82523d6000602084013e613053565b606091505b509150915061306382828661306e565b979650505050505050565b6060831561307d57508161178e565b82511561308d5782518084602001fd5b8160405162461bcd60e51b8152600401610ab8919061322e565b8280546130b3906138d2565b90600052602060002090601f0160209004810192826130d5576000855561311b565b82601f106130ee5782800160ff1982351617855561311b565b8280016001018555821561311b579182015b8281111561311b578235825591602001919060010190613100565b5061312792915061312b565b5090565b5b80821115613127576000815560010161312c565b6001600160a01b038116811461255457600080fd5b803561316081613140565b919050565b6000806040838503121561317857600080fd5b823561318381613140565b946020939093013593505050565b803561ffff8116811461316057600080fd5b600080604083850312156131b657600080fd5b6131bf83613191565b91506131cd60208401613191565b90509250929050565b60005b838110156131f15781810151838201526020016131d9565b83811115612ebb5750506000910152565b6000815180845261321a8160208601602086016131d6565b601f01601f19169290920160200192915050565b60208152600061178e6020830184613202565b60006020828403121561325357600080fd5b61178e82613191565b61ffff96871681526001600160401b0395861660208201526001600160a01b03948516604082015292909516606083015290921660808301529190911660a082015260c00190565b60008083601f8401126132b657600080fd5b5081356001600160401b038111156132cd57600080fd5b6020830191508360208285010111156132e557600080fd5b9250929050565b801515811461255457600080fd5b600080600080600080600060a0888a03121561331557600080fd5b61331e88613191565b9650602088013561332e81613140565b955060408801356001600160401b038082111561334a57600080fd5b6133568b838c016132a4565b909750955060608a0135915061336b826132ec565b9093506080890135908082111561338157600080fd5b5061338e8a828b016132a4565b989b979a50959850939692959293505050565b6001600160401b038116811461255457600080fd5b8035613160816133a1565b60008060008060008060008060008060006101008c8e0312156133e357600080fd5b6133ec8c613155565b9a506133fa60208d016133b6565b995061340860408d01613191565b98506001600160401b038060608e0135111561342357600080fd5b6134338e60608f01358f016132a4565b909950975060808d013581101561344957600080fd5b6134598e60808f01358f016132a4565b909750955061346a60a08e01613155565b945061347860c08e01613155565b93508060e08e0135111561348b57600080fd5b5061349c8d60e08e01358e016132a4565b81935080925050509295989b509295989b9093969950565b6000806000606084860312156134c957600080fd5b6134d284613191565b925060208401356134e281613140565b929592945050506040919091013590565b60006020828403121561350557600080fd5b813561178e81613140565b600080600080600080600060e0888a03121561352b57600080fd5b61353488613191565b965061354260208901613191565b95506040880135613552816133a1565b9450606088013561356281613140565b935061357060808901613191565b925060a0880135613580816133a1565b915060c088013561359081613140565b8091505092959891949750929550565b600080600080608085870312156135b657600080fd5b6135bf85613191565b966020860135965060408601359560600135945092505050565b600080600080608085870312156135ef57600080fd5b84356135fa81613140565b935061360860208601613191565b93969395505050506040820135916060013590565b6000806040838503121561363057600080fd5b61363983613191565b9150602083013561364981613140565b809150509250929050565b6000806000806060858703121561366a57600080fd5b61367385613191565b935061368160208601613191565b925060408501356001600160401b0381111561369c57600080fd5b6136a8878288016132a4565b95989497509550505050565b600080604083850312156136c757600080fd5b61318383613191565b60008060008060008060008060c0898b0312156136ec57600080fd5b6136f589613191565b975060208901356001600160401b038082111561371157600080fd5b61371d8c838d016132a4565b909950975060408b0135915061373282613140565b90955060608a013590613744826133a1565b90945060808a0135935060a08a0135908082111561376157600080fd5b5061376e8b828c016132a4565b999c989b5096995094979396929594505050565b600080600080600080600060c0888a03121561379d57600080fd5b6137a688613191565b965060208801356137b681613140565b955060408801359450606088013593506080880135925060a08801356001600160401b038111156137e657600080fd5b61338e8a828b016132a4565b60008060006040848603121561380757600080fd5b61381084613191565b925060208401356001600160401b0381111561382b57600080fd5b613837868287016132a4565b9497909650939450505050565b6000806040838503121561385757600080fd5b82356131bf81613140565b60008060008060006080868803121561387a57600080fd5b61388386613191565b9450602086013561389381613140565b93506040860135925060608601356001600160401b038111156138b557600080fd5b6138c1888289016132a4565b969995985093965092949392505050565b600181811c908216806138e657607f821691505b6020821081141561390757634e487b7160e01b600052602260045260246000fd5b50919050565b61ffff8681168252851660208201526001600160a01b03841660408201526060810183905260a06080820181905260009061306390830184613202565b60006020828403121561395c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561398c5761398c613963565b500190565b600080858511156139a157600080fd5b838611156139ae57600080fd5b5050820193919092039150565b61ffff841681526001600160a01b03831660208201526060604082018190526000906139e990830184613202565b95945050505050565b600060208284031215613a0457600080fd5b815161178e816133a1565b6001600160401b0360c01b8760c01b168152600061ffff60f01b808860f01b1660088401526bffffffffffffffffffffffff198760601b16600a840152808660f01b16601e840152508351613a6b8160208501602088016131d6565b80830190508351613a838160208401602088016131d6565b0160200198975050505050505050565b60208082526030908201527f4c617965725a65726f3a20696e76616c696420696e626f756e642070726f6f6660408201526f103634b13930b93c903b32b939b4b7b760811b606082015260800190565b60208082526026908201527f4c617965725a65726f3a20696e76616c6964206f7574626f756e642070726f6f60408201526566207479706560d01b606082015260800190565b600061ffff80831681811415613b4157613b41613963565b6001019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006122fa602083018486613b4b565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b61ffff8816815260c060208201526000613bcb60c0830189613202565b6001600160a01b03881660408401526001600160401b03871660608401526080830186905282810360a0840152613c03818587613b4b565b9a9950505050505050505050565b61ffff841681526040602082015260006139e9604083018486613b4b565b600060208284031215613c4157600080fd5b813561178e816133a1565b600082821015613c5e57613c5e613963565b500390565b604081526000613c766040830185613202565b905061ffff831660208301529392505050565b600060208284031215613c9b57600080fd5b815161178e816132ec565b60008251613cb88184602087016131d6565b919091019291505056fea264697066735822122071672fc5f086de3088df17dfadd1512ed6a06b6a52c5df86249bb30425c1c99164736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2848,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2624,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 15694,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "layerZeroToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)4942"
      },
      {
        "astId": 15697,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "treasuryContract",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ILayerZeroTreasury)11342"
      },
      {
        "astId": 15701,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "nativeFees",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15703,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "treasuryZROFees",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 15710,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "appConfig",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_struct(ApplicationConfiguration)11474_storage))"
      },
      {
        "astId": 15715,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "defaultAppConfig",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint16,t_struct(ApplicationConfiguration)11474_storage)"
      },
      {
        "astId": 15721,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "defaultAdapterParams",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_bytes_storage))"
      },
      {
        "astId": 15727,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "inboundProofLibrary",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_address))"
      },
      {
        "astId": 15731,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "maxInboundProofLibrary",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint16,t_uint16)"
      },
      {
        "astId": 15737,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "supportedOutboundProof",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_bool))"
      },
      {
        "astId": 15741,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "chainAddressSizeMap",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint16,t_uint256)"
      },
      {
        "astId": 15751,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "hashLookup",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_mapping(t_bytes32,t_mapping(t_bytes32,t_uint256))))"
      },
      {
        "astId": 15755,
        "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
        "label": "ulnLookup",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint16,t_bytes32)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)4942": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ILayerZeroTreasury)11342": {
        "encoding": "inplace",
        "label": "contract ILayerZeroTreasury",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_mapping(t_bytes32,t_mapping(t_bytes32,t_uint256))))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => mapping(bytes32 => mapping(bytes32 => uint256))))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_mapping(t_bytes32,t_mapping(t_bytes32,t_uint256)))"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_struct(ApplicationConfiguration)11474_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => struct ILayerZeroUltraLightNodeV2.ApplicationConfiguration))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_struct(ApplicationConfiguration)11474_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint16,t_address)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint16,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint16,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_uint16,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint16,t_mapping(t_bytes32,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(bytes32 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_uint16,t_mapping(t_uint16,t_address))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint16 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_address)"
      },
      "t_mapping(t_uint16,t_mapping(t_uint16,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint16 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_bool)"
      },
      "t_mapping(t_uint16,t_mapping(t_uint16,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint16 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_bytes_storage)"
      },
      "t_mapping(t_uint16,t_struct(ApplicationConfiguration)11474_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => struct ILayerZeroUltraLightNodeV2.ApplicationConfiguration)",
        "numberOfBytes": "32",
        "value": "t_struct(ApplicationConfiguration)11474_storage"
      },
      "t_mapping(t_uint16,t_uint16)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint16)",
        "numberOfBytes": "32",
        "value": "t_uint16"
      },
      "t_mapping(t_uint16,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(ApplicationConfiguration)11474_storage": {
        "encoding": "inplace",
        "label": "struct ILayerZeroUltraLightNodeV2.ApplicationConfiguration",
        "members": [
          {
            "astId": 11463,
            "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
            "label": "inboundProofLibraryVersion",
            "offset": 0,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 11465,
            "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
            "label": "inboundBlockConfirmations",
            "offset": 2,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 11467,
            "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
            "label": "relayer",
            "offset": 10,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 11469,
            "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
            "label": "outboundProofType",
            "offset": 30,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 11471,
            "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
            "label": "outboundBlockConfirmations",
            "offset": 0,
            "slot": "1",
            "type": "t_uint64"
          },
          {
            "astId": 11473,
            "contract": "contracts/mContracts/lzContracts/UltraLightNodeV2_WO_Validation.sol:UltraLightNodeV2_wo_Validation",
            "label": "oracle",
            "offset": 8,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}